{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport logoImage from '../images/logo-modified.png';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userProfile, setUserProfile] = useState(null); // State to store user profile\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Handle login (POST)\n  const handleLogin = async () => {\n    if (email && password) {\n      try {\n        // Send login request to the backend\n        const response = await axios.post('http://localhost:5000/api/login', {\n          email,\n          password\n        });\n\n        // If login is successful, get user profile (GET)\n        const {\n          userProfile\n        } = response.data;\n        setUserProfile(userProfile);\n        localStorage.setItem('userProfile', JSON.stringify(userProfile)); // Store user profile\n\n        console.log('Login successful:', response.data);\n        navigate('/home'); // Redirect to home page\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid email or password');\n      }\n    } else {\n      alert('Please enter both email and password');\n    }\n  };\n\n  // Fetch user profile (GET)\n  const fetchUserProfile = async () => {\n    const storedProfile = localStorage.getItem('userProfile');\n    if (storedProfile) {\n      setUserProfile(JSON.parse(storedProfile)); // Set user profile from local storage\n    } else {\n      alert('No user profile found. Please log in again.');\n    }\n  };\n\n  // Handle update profile (PUT)\n  const handleProfileUpdate = async updatedData => {\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\n    if (storedProfile) {\n      try {\n        const response = await axios.put(`http://localhost:5000/api/user/${storedProfile.email}`, updatedData);\n        setUserProfile(response.data.updatedProfile);\n        localStorage.setItem('userProfile', JSON.stringify(response.data.updatedProfile));\n        alert('Profile updated successfully');\n      } catch (error) {\n        alert('Error updating profile');\n      }\n    }\n  };\n\n  // Handle account deletion (DELETE)\n  const handleAccountDeletion = async () => {\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\n    if (storedProfile) {\n      try {\n        const response = await axios.delete(`http://localhost:5000/api/user/${storedProfile.email}`);\n        localStorage.removeItem('userProfile'); // Clear local storage\n        setUserProfile(null);\n        alert('Account deleted successfully');\n        navigate('/signup'); // Redirect to signup page\n      } catch (error) {\n        alert('Error deleting account');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\",\n        className: \"auth-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TRAVELBUDDY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New here? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), userProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Welcome, \", userProfile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userProfile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", userProfile.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleProfileUpdate({\n          name: 'Updated Name'\n        }),\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAccountDeletion,\n        children: \"Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUserProfile,\n      children: \"Fetch Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"pUxCk05ZfWwEQCqh/8DO3FGPTP8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","logoImage","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userProfile","setUserProfile","error","setError","navigate","handleLogin","response","post","data","localStorage","setItem","JSON","stringify","console","log","_error$response","_error$response$data","message","alert","fetchUserProfile","storedProfile","getItem","parse","handleProfileUpdate","updatedData","put","updatedProfile","handleAccountDeletion","delete","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","name","phone","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport logoImage from '../images/logo-modified.png';\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userProfile, setUserProfile] = useState(null); // State to store user profile\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Handle login (POST)\r\n  const handleLogin = async () => {\r\n    if (email && password) {\r\n      try {\r\n        // Send login request to the backend\r\n        const response = await axios.post('http://localhost:5000/api/login', { email, password });\r\n\r\n        // If login is successful, get user profile (GET)\r\n        const { userProfile } = response.data;\r\n        setUserProfile(userProfile);\r\n        localStorage.setItem('userProfile', JSON.stringify(userProfile)); // Store user profile\r\n\r\n        console.log('Login successful:', response.data);\r\n        navigate('/home'); // Redirect to home page\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || 'Invalid email or password');\r\n      }\r\n    } else {\r\n      alert('Please enter both email and password');\r\n    }\r\n  };\r\n\r\n  // Fetch user profile (GET)\r\n  const fetchUserProfile = async () => {\r\n    const storedProfile = localStorage.getItem('userProfile');\r\n    if (storedProfile) {\r\n      setUserProfile(JSON.parse(storedProfile)); // Set user profile from local storage\r\n    } else {\r\n      alert('No user profile found. Please log in again.');\r\n    }\r\n  };\r\n\r\n  // Handle update profile (PUT)\r\n  const handleProfileUpdate = async (updatedData) => {\r\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n    if (storedProfile) {\r\n      try {\r\n        const response = await axios.put(`http://localhost:5000/api/user/${storedProfile.email}`, updatedData);\r\n        setUserProfile(response.data.updatedProfile);\r\n        localStorage.setItem('userProfile', JSON.stringify(response.data.updatedProfile));\r\n        alert('Profile updated successfully');\r\n      } catch (error) {\r\n        alert('Error updating profile');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle account deletion (DELETE)\r\n  const handleAccountDeletion = async () => {\r\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n    if (storedProfile) {\r\n      try {\r\n        const response = await axios.delete(`http://localhost:5000/api/user/${storedProfile.email}`);\r\n        localStorage.removeItem('userProfile'); // Clear local storage\r\n        setUserProfile(null);\r\n        alert('Account deleted successfully');\r\n        navigate('/signup'); // Redirect to signup page\r\n      } catch (error) {\r\n        alert('Error deleting account');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Login</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <p>New here? <Link to=\"/signup\">Sign Up</Link></p>\r\n\r\n      {/* Display user profile if logged in */}\r\n      {userProfile && (\r\n        <div>\r\n          <h3>Welcome, {userProfile.name}</h3>\r\n          <p>Email: {userProfile.email}</p>\r\n          <p>Phone: {userProfile.phone}</p>\r\n          <button onClick={() => handleProfileUpdate({ name: 'Updated Name' })}>Update Profile</button>\r\n          <button onClick={handleAccountDeletion}>Delete Account</button>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={fetchUserProfile}>Fetch Profile</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}