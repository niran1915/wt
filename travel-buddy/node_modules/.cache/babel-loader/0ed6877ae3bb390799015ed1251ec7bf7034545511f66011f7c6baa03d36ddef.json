{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport logoImage from '../images/logo-modified.png';\nimport './signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignup = async () => {\n    if (password === confirmPassword) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/users/signup', {\n          email,\n          phone,\n          password\n        });\n        console.log(response.data); // Success message\n      } catch (error) {\n        console.error('Error during signup', error);\n      }\n    } else {\n      alert('Passwords do not match');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"qnafmNRslBYQTLlsJyLS+Gt9UOU=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\n\n/* import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; \r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/signup', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, phone, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Sign up successful! Please login.');\r\n          navigate('/login'); \r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error signing up, please try again.');\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup; */\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","axios","logoImage","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleSignup","response","post","console","log","data","error","alert","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';  // Import axios for making HTTP requests\r\nimport logoImage from '../images/logo-modified.png';\r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/users/signup', { email, phone, password });\r\n        console.log(response.data);  // Success message\r\n      } catch (error) {\r\n        console.error('Error during signup', error);\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone\"\r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n/* import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; \r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/signup', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, phone, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Sign up successful! Please login.');\r\n          navigate('/login'); \r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error signing up, please try again.');\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup; */\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}