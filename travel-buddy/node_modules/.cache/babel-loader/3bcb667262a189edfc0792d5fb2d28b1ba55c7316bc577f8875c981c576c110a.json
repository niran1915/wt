{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\n/* import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst PaymentPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { selectedPackage, peopleCount, pickupTime, totalCost } = location.state || {};\r\n\r\n  if (!selectedPackage) {\r\n   \r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  const handlePayNow = () => {\r\n   \r\n    window.location.href = `https://mockpaymentgateway.com/pay?amount=${totalCost}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <div className=\"payment-container\">\r\n        <h1>Payment Page</h1>\r\n        <div className=\"payment-details\">\r\n          <h3>Package Details:</h3>\r\n          <p><strong>Package:</strong> {selectedPackage.name}</p>\r\n          <p><strong>Pickup Time:</strong> {pickupTime}</p>\r\n          <p><strong>Number of People:</strong> {peopleCount}</p>\r\n          <p><strong>Total Cost:</strong> â‚¹{totalCost}</p>\r\n        </div>\r\n\r\n        <div className=\"payment-actions\">\r\n          <button onClick={handlePayNow}>Pay Now</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './PaymentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    selectedPackage,\n    peopleCount,\n    pickupTime,\n    totalCost\n  } = location.state || {};\n  const [orderId, setOrderId] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Track loading state\n  const [paymentStatus, setPaymentStatus] = useState(''); // Track payment status\n\n  // Redirect to home if no selectedPackage is available\n  if (!selectedPackage) {\n    navigate('/');\n    return null;\n  }\n\n  // Function to create the order (mock backend call)\n  const createOrder = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: totalCost,\n          // Amount for the order (in INR)\n          packageName: selectedPackage.name // Package name from the selected package\n        })\n      });\n      const data = await response.json();\n      if (data.orderId) {\n        setOrderId(data.orderId); // Store the order ID from the response\n      } else {\n        console.error('Failed to create order:', data);\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n\n  // Simulate payment process (always successful in this case)\n  const handlePayNow = async () => {\n    if (!orderId) {\n      // Create the order if it's not already created\n      setIsLoading(true); // Show loading indicator\n      await createOrder(); // Wait for order creation\n      setIsLoading(false); // Hide loading indicator after order is created\n    }\n    if (orderId) {\n      // Set payment status directly to 'success' (simulate a successful payment)\n      const paymentStatus = 'success'; // Always success in this scenario\n\n      // Call backend to verify the payment status\n      const response = await fetch('http://localhost:5000/verify-payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          orderId,\n          // Send the orderId\n          paymentStatus // Send the 'success' payment status\n        })\n      });\n      const data = await response.json();\n      if (data.status === 'success') {\n        setPaymentStatus('Payment successful!');\n        alert('Payment was successful!');\n\n        // Redirect to the PaymentConfirmation page with all the details\n        navigate('/paymentconfirmation', {\n          state: {\n            selectedPackage,\n            peopleCount,\n            pickupTime,\n            totalCost,\n            orderId,\n            paymentStatus: 'Payment successful!'\n          }\n        });\n      } else {\n        setPaymentStatus('Payment failed. Please try again.');\n        alert('Payment failed. Please try again!');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Payment Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Package Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Package:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 14\n          }, this), \" \", selectedPackage.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Pickup Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 14\n          }, this), \" \", pickupTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Number of People:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 14\n          }, this), \" \", peopleCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 14\n          }, this), \" \\u20B9\", totalCost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-actions\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading order...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePayNow,\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-status\",\n        children: paymentStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"//73yiC6THHMY3ML++d1H4qprYE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","PaymentPage","_s","navigate","location","selectedPackage","peopleCount","pickupTime","totalCost","state","orderId","setOrderId","isLoading","setIsLoading","paymentStatus","setPaymentStatus","createOrder","response","fetch","method","headers","body","JSON","stringify","amount","packageName","name","data","json","console","error","handlePayNow","status","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/PaymentPage.js"],"sourcesContent":["/* import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst PaymentPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { selectedPackage, peopleCount, pickupTime, totalCost } = location.state || {};\r\n\r\n  if (!selectedPackage) {\r\n   \r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  const handlePayNow = () => {\r\n   \r\n    window.location.href = `https://mockpaymentgateway.com/pay?amount=${totalCost}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <div className=\"payment-container\">\r\n        <h1>Payment Page</h1>\r\n        <div className=\"payment-details\">\r\n          <h3>Package Details:</h3>\r\n          <p><strong>Package:</strong> {selectedPackage.name}</p>\r\n          <p><strong>Pickup Time:</strong> {pickupTime}</p>\r\n          <p><strong>Number of People:</strong> {peopleCount}</p>\r\n          <p><strong>Total Cost:</strong> â‚¹{totalCost}</p>\r\n        </div>\r\n\r\n        <div className=\"payment-actions\">\r\n          <button onClick={handlePayNow}>Pay Now</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './PaymentPage.css';\r\n\r\nconst PaymentPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { selectedPackage, peopleCount, pickupTime, totalCost } = location.state || {};\r\n\r\n  const [orderId, setOrderId] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false); // Track loading state\r\n  const [paymentStatus, setPaymentStatus] = useState(''); // Track payment status\r\n\r\n  // Redirect to home if no selectedPackage is available\r\n  if (!selectedPackage) {\r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  // Function to create the order (mock backend call)\r\n  const createOrder = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/create-order', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          amount: totalCost, // Amount for the order (in INR)\r\n          packageName: selectedPackage.name, // Package name from the selected package\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.orderId) {\r\n        setOrderId(data.orderId); // Store the order ID from the response\r\n      } else {\r\n        console.error('Failed to create order:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n    }\r\n  };\r\n\r\n  // Simulate payment process (always successful in this case)\r\n  const handlePayNow = async () => {\r\n    if (!orderId) {\r\n      // Create the order if it's not already created\r\n      setIsLoading(true); // Show loading indicator\r\n      await createOrder(); // Wait for order creation\r\n      setIsLoading(false); // Hide loading indicator after order is created\r\n    }\r\n\r\n    if (orderId) {\r\n      // Set payment status directly to 'success' (simulate a successful payment)\r\n      const paymentStatus = 'success'; // Always success in this scenario\r\n\r\n      // Call backend to verify the payment status\r\n      const response = await fetch('http://localhost:5000/verify-payment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          orderId, // Send the orderId\r\n          paymentStatus, // Send the 'success' payment status\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.status === 'success') {\r\n        setPaymentStatus('Payment successful!');\r\n        alert('Payment was successful!');\r\n\r\n        // Redirect to the PaymentConfirmation page with all the details\r\n        navigate('/paymentconfirmation', {\r\n          state: {\r\n            selectedPackage,\r\n            peopleCount,\r\n            pickupTime,\r\n            totalCost,\r\n            orderId,\r\n            paymentStatus: 'Payment successful!',\r\n          }\r\n        });\r\n      } else {\r\n        setPaymentStatus('Payment failed. Please try again.');\r\n        alert('Payment failed. Please try again!');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <div className=\"payment-container\">\r\n        <h1>Payment Page</h1>\r\n        <div className=\"payment-details\">\r\n          <h3>Package Details:</h3>\r\n          <p><strong>Package:</strong> {selectedPackage.name}</p>\r\n          <p><strong>Pickup Time:</strong> {pickupTime}</p>\r\n          <p><strong>Number of People:</strong> {peopleCount}</p>\r\n          <p><strong>Total Cost:</strong> â‚¹{totalCost}</p>\r\n        </div>\r\n\r\n        <div className=\"payment-actions\">\r\n          {isLoading ? (\r\n            <p>Loading order...</p>\r\n          ) : (\r\n            <button onClick={handlePayNow}>Pay Now</button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Optionally show payment status message */}\r\n        {paymentStatus && <div className=\"payment-status\">{paymentStatus}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}