{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet'; // For custom marker icons\nimport './Home.css';\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\nimport lalbaghImg from '../images/lalbagh.jpg';\nimport cubbonParkImg from '../images/cubbon-park.jpg';\nimport concertImg from '../images/concert.jpg';\nimport marathonImg from '../images/marathon.jpg';\nimport foodFestivalImg from '../images/food-festival.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [route, setRoute] = useState(null);\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const [travelMode, setTravelMode] = useState('driving');\n  const [isFetching, setIsFetching] = useState(false); // State to control API fetching\n\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const OPENROUTESERVICE_API_KEY = process.env.REACT_APP_OPENROUTESERVICE_API_KEY;\n\n  // Debounce function for handling input change delay\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  // Fetch place suggestions from OpenRouteService API\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      const response = await axios.get('https://api.openrouteservice.org/geocode/search', {\n        params: {\n          api_key: OPENROUTESERVICE_API_KEY,\n          text: location\n        }\n      });\n      if (response.data.features && response.data.features.length > 0) {\n        setSuggestions(response.data.features.map(place => ({\n          displayName: place.properties.label,\n          position: {\n            lat: place.geometry.coordinates[1],\n            lng: place.geometry.coordinates[0]\n          }\n        })));\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error('Error fetching places:', error);\n      setSuggestions([]);\n    }\n  };\n\n  // Handle place change with debounce\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\n    setter(suggestion.position);\n    inputRef.current.value = suggestion.displayName;\n    setSuggestions([]);\n  };\n\n  // Fetch route details (distance and duration) using OpenRouteService API\n  const calculateRoute = async () => {\n    if (from && to) {\n      setIsFetching(true);\n      setRoute(null);\n      setDistance('');\n      setDuration('');\n      try {\n        const response = await axios.post('https://api.openrouteservice.org/v2/directions/driving-car', {\n          coordinates: [[from.lng, from.lat], [to.lng, to.lat]]\n        }, {\n          headers: {\n            Authorization: `Bearer ${OPENROUTESERVICE_API_KEY}`\n          }\n        });\n        const routeData = response.data.routes[0];\n        const dist = routeData.summary.distance / 1000; // Convert from meters to kilometers\n        const dur = routeData.summary.duration / 60; // Convert from seconds to minutes\n\n        setDistance(`${dist.toFixed(2)} km`);\n        setDuration(`${Math.round(dur)} mins`);\n\n        // Set the route to display on the map\n        setRoute(routeData.geometry.coordinates);\n      } catch (error) {\n        console.error('Error fetching route:', error);\n        alert('Failed to calculate route. Please try again.');\n      } finally {\n        setIsFetching(false);\n      }\n    } else {\n      alert('Please select both the start and end locations.');\n    }\n  };\n\n  // Swap the start and end locations\n  const swapLocations = () => {\n    const temp = from;\n    setFrom(to);\n    setTo(temp);\n    setFromSuggestions([]);\n    setToSuggestions([]);\n  };\n\n  // Use useEffect to react to changes in `from` and `to` inputs\n  useEffect(() => {\n    if (from && to) {\n      calculateRoute();\n    }\n  }, [from, to]); // This effect will run whenever the `from` or `to` changes\n\n  const popularDestinations = [{\n    name: \"ISKCON Temple\",\n    location: \"Rajajinagar, Bangalore\",\n    rating: \"4.2 ⭐\",\n    image: iskconTempleImg\n  }, {\n    name: \"Lalbagh Botanical Garden\",\n    location: \"Mavalli, Bangalore\",\n    rating: \"4.7 ⭐\",\n    image: lalbaghImg\n  }, {\n    name: \"Cubbon Park\",\n    location: \"Bangalore\",\n    rating: \"4.5 ⭐\",\n    image: cubbonParkImg\n  }];\n  const popularEvents = [{\n    name: \"Live Concert by XYZ Band\",\n    location: \"ABC Arena, Bangalore\",\n    date: \"12th December 2024\",\n    image: concertImg\n  }, {\n    name: \"City Marathon 2024\",\n    location: \"Downtown Park, Bangalore\",\n    date: \"5th January 2024\",\n    image: marathonImg\n  }, {\n    name: \"Annual Food Festival\",\n    location: \"City Square, Bangalore\",\n    date: \"20th November 2024\",\n    image: foodFestivalImg\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: swapLocations,\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setTo, toRef, setToSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"driving\",\n            checked: travelMode === 'driving',\n            onChange: () => setTravelMode('driving')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), \"Driving\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"walking\",\n            checked: travelMode === 'walking',\n            onChange: () => setTravelMode('walking')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), \"Walking\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"bicycling\",\n            checked: travelMode === 'bicycling',\n            onChange: () => setTravelMode('bicycling')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), \"Bicycling\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        disabled: isFetching,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-details\",\n      children: distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: from ? [from.lat, from.lng] : [12.9716, 77.5946],\n        zoom: 13,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), from && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [from.lat, from.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"From Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 20\n        }, this), to && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [to.lat, to.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"To Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 18\n        }, this), route && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route.map(coord => [coord[1], coord[0]]),\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Destinations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-destinations\",\n        children: popularDestinations.map((destination, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: destination.image,\n            alt: destination.name,\n            className: \"destination-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: destination.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: destination.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rating\",\n              children: destination.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/destinations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow-btn\",\n          children: \"See All Destinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-events\",\n        children: popularEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.image,\n            alt: event.name,\n            className: \"event-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow-btn\",\n          children: \"See All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"O/KeQPEo4bndOtTc/fyW2fxe/fg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Link","MapContainer","TileLayer","Marker","Popup","Polyline","L","iskconTempleImg","lalbaghImg","cubbonParkImg","concertImg","marathonImg","foodFestivalImg","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","distance","setDistance","duration","setDuration","route","setRoute","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","travelMode","setTravelMode","isFetching","setIsFetching","fromRef","toRef","OPENROUTESERVICE_API_KEY","process","env","REACT_APP_OPENROUTESERVICE_API_KEY","debounce","func","delay","timeout","args","clearTimeout","setTimeout","fetchSuggestions","location","setter","setSuggestions","length","response","get","params","api_key","text","data","features","map","place","displayName","properties","label","position","lat","geometry","coordinates","lng","error","console","handlePlaceChange","selectSuggestion","suggestion","inputRef","current","value","calculateRoute","post","headers","Authorization","routeData","routes","dist","summary","dur","toFixed","Math","round","alert","swapLocations","temp","popularDestinations","name","rating","image","popularEvents","date","className","children","style","type","placeholder","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","checked","disabled","width","height","center","zoom","url","positions","coord","color","destination","src","alt","event","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport L from 'leaflet'; // For custom marker icons\r\nimport './Home.css';\r\n\r\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\r\nimport lalbaghImg from '../images/lalbagh.jpg';\r\nimport cubbonParkImg from '../images/cubbon-park.jpg';\r\nimport concertImg from '../images/concert.jpg';\r\nimport marathonImg from '../images/marathon.jpg';\r\nimport foodFestivalImg from '../images/food-festival.jpg';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [route, setRoute] = useState(null);\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n  const [travelMode, setTravelMode] = useState('driving');\r\n  const [isFetching, setIsFetching] = useState(false); // State to control API fetching\r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const OPENROUTESERVICE_API_KEY = process.env.REACT_APP_OPENROUTESERVICE_API_KEY;\r\n\r\n  // Debounce function for handling input change delay\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  // Fetch place suggestions from OpenRouteService API\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get('https://api.openrouteservice.org/geocode/search', {\r\n        params: {\r\n          api_key: OPENROUTESERVICE_API_KEY,\r\n          text: location,\r\n        },\r\n      });\r\n\r\n      if (response.data.features && response.data.features.length > 0) {\r\n        setSuggestions(response.data.features.map((place) => ({\r\n          displayName: place.properties.label,\r\n          position: { lat: place.geometry.coordinates[1], lng: place.geometry.coordinates[0] },\r\n        })));\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  // Handle place change with debounce\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\r\n    setter(suggestion.position);\r\n    inputRef.current.value = suggestion.displayName;\r\n    setSuggestions([]);\r\n  };\r\n\r\n  // Fetch route details (distance and duration) using OpenRouteService API\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      setIsFetching(true);\r\n      setRoute(null);\r\n      setDistance('');\r\n      setDuration('');\r\n\r\n      try {\r\n        const response = await axios.post('https://api.openrouteservice.org/v2/directions/driving-car', {\r\n          coordinates: [\r\n            [from.lng, from.lat],\r\n            [to.lng, to.lat],\r\n          ],\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${OPENROUTESERVICE_API_KEY}`,\r\n          },\r\n        });\r\n\r\n        const routeData = response.data.routes[0];\r\n        const dist = routeData.summary.distance / 1000; // Convert from meters to kilometers\r\n        const dur = routeData.summary.duration / 60; // Convert from seconds to minutes\r\n\r\n        setDistance(`${dist.toFixed(2)} km`);\r\n        setDuration(`${Math.round(dur)} mins`);\r\n\r\n        // Set the route to display on the map\r\n        setRoute(routeData.geometry.coordinates);\r\n      } catch (error) {\r\n        console.error('Error fetching route:', error);\r\n        alert('Failed to calculate route. Please try again.');\r\n      } finally {\r\n        setIsFetching(false);\r\n      }\r\n    } else {\r\n      alert('Please select both the start and end locations.');\r\n    }\r\n  };\r\n\r\n  // Swap the start and end locations\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n    setFromSuggestions([]);\r\n    setToSuggestions([]);\r\n  };\r\n\r\n  // Use useEffect to react to changes in `from` and `to` inputs\r\n  useEffect(() => {\r\n    if (from && to) {\r\n      calculateRoute();\r\n    }\r\n  }, [from, to]); // This effect will run whenever the `from` or `to` changes\r\n\r\n  const popularDestinations = [\r\n    { name: \"ISKCON Temple\", location: \"Rajajinagar, Bangalore\", rating: \"4.2 ⭐\", image: iskconTempleImg },\r\n    { name: \"Lalbagh Botanical Garden\", location: \"Mavalli, Bangalore\", rating: \"4.7 ⭐\", image: lalbaghImg },\r\n    { name: \"Cubbon Park\", location: \"Bangalore\", rating: \"4.5 ⭐\", image: cubbonParkImg },\r\n  ];\r\n\r\n  const popularEvents = [\r\n    { name: \"Live Concert by XYZ Band\", location: \"ABC Arena, Bangalore\", date: \"12th December 2024\", image: concertImg },\r\n    { name: \"City Marathon 2024\", location: \"Downtown Park, Bangalore\", date: \"5th January 2024\", image: marathonImg },\r\n    { name: \"Annual Food Festival\", location: \"City Square, Bangalore\", date: \"20th November 2024\", image: foodFestivalImg },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Location Selection Section */}\r\n      <div className=\"location-select\">\r\n        {/* From Location Input */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Swap Button */}\r\n        <button onClick={swapLocations}>⇄</button>\r\n\r\n        {/* To Location Input */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setTo, toRef, setToSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Travel Mode Selector */}\r\n        <div className=\"travel-mode-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"driving\"\r\n              checked={travelMode === 'driving'}\r\n              onChange={() => setTravelMode('driving')}\r\n            />\r\n            Driving\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"walking\"\r\n              checked={travelMode === 'walking'}\r\n              onChange={() => setTravelMode('walking')}\r\n            />\r\n            Walking\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"bicycling\"\r\n              checked={travelMode === 'bicycling'}\r\n              onChange={() => setTravelMode('bicycling')}\r\n            />\r\n            Bicycling\r\n          </label>\r\n        </div>\r\n\r\n        {/* Get Route Button */}\r\n        <button onClick={calculateRoute} disabled={isFetching}>Get Route</button>\r\n      </div>\r\n\r\n      {/* Distance and Duration */}\r\n      <div className=\"route-details\">\r\n        {distance && duration && (\r\n          <div>\r\n            <h3>Distance: {distance}</h3>\r\n            <h3>Duration: {duration}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Map */}\r\n      <div style={{ width: '100%', height: '500px' }}>\r\n        <MapContainer center={from ? [from.lat, from.lng] : [12.9716, 77.5946]} zoom={13} style={{ width: '100%', height: '100%' }}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          {from && <Marker position={[from.lat, from.lng]}><Popup>From Location</Popup></Marker>}\r\n          {to && <Marker position={[to.lat, to.lng]}><Popup>To Location</Popup></Marker>}\r\n          {route && <Polyline positions={route.map(coord => [coord[1], coord[0]])} color=\"blue\" />}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Popular Destinations */}\r\n      <div className=\"popular-sections\">\r\n        <h2>Popular Destinations</h2>\r\n        <div className=\"popular-destinations\">\r\n          {popularDestinations.map((destination, index) => (\r\n            <div key={index} className=\"destination\">\r\n              <img src={destination.image} alt={destination.name} className=\"destination-image\" />\r\n              <div className=\"destination-info\">\r\n                <h3>{destination.name}</h3>\r\n                <p>{destination.location}</p>\r\n                <p className=\"rating\">{destination.rating}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Link to=\"/destinations\">\r\n          <button className=\"scroll-arrow-btn\">See All Destinations</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Popular Events */}\r\n      <div className=\"popular-sections\">\r\n        <h2>Popular Events</h2>\r\n        <div className=\"popular-events\">\r\n          {popularEvents.map((event, index) => (\r\n            <div key={index} className=\"event\">\r\n              <img src={event.image} alt={event.name} className=\"event-image\" />\r\n              <div className=\"event-info\">\r\n                <h3>{event.name}</h3>\r\n                <p>{event.location}</p>\r\n                <p>{event.date}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Link to=\"/events\">\r\n          <button className=\"scroll-arrow-btn\">See All Events</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n"],"mappingszB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChF,OAAOC,CAAC,MAAM,SAAS,CAAC,CAAC;AACzB,OAAO,YAAY;AAEnB,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACuB,EAAE,EAAEC,KAAK,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMuC,OAAO,GAAGtC,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMuC,KAAK,GAAGvC,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMwC,wBAAwB,GAAGC,OAAO,CAACC,GAAG,CAACC,kCAAkC;;EAE/E;EACA,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAChC,IAAIC,OAAO;IACX,OAAO,CAAC,GAAGC,IAAI,KAAK;MAClBC,YAAY,CAACF,OAAO,CAAC;MACrBA,OAAO,GAAGG,UAAU,CAAC,MAAM;QACzBL,IAAI,CAAC,GAAGG,IAAI,CAAC;MACf,CAAC,EAAEF,KAAK,CAAC;IACX,CAAC;EACH,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,KAAK;IACnE,IAAIF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;MACzBD,cAAc,CAAC,EAAE,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,GAAG,CAAC,iDAAiD,EAAE;QAClFC,MAAM,EAAE;UACNC,OAAO,EAAEnB,wBAAwB;UACjCoB,IAAI,EAAER;QACR;MACF,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACK,IAAI,CAACC,QAAQ,IAAIN,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACP,MAAM,GAAG,CAAC,EAAE;QAC/DD,cAAc,CAACE,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAEC,KAAK,KAAM;UACpDC,WAAW,EAAED,KAAK,CAACE,UAAU,CAACC,KAAK;UACnCC,QAAQ,EAAE;YAAEC,GAAG,EAAEL,KAAK,CAACM,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;YAAEC,GAAG,EAAER,KAAK,CAACM,QAAQ,CAACC,WAAW,CAAC,CAAC;UAAE;QACrF,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,MAAM;QACLjB,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CnB,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMqB,iBAAiB,GAAG/B,QAAQ,CAAC,CAACQ,QAAQ,EAAEC,MAAM,EAAEC,cAAc,KAAK;IACvEH,gBAAgB,CAACC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,CAAC;EACpD,CAAC,EAAE,GAAG,CAAC;EAEP,MAAMsB,gBAAgB,GAAGA,CAACC,UAAU,EAAExB,MAAM,EAAEyB,QAAQ,EAAExB,cAAc,KAAK;IACzED,MAAM,CAACwB,UAAU,CAACT,QAAQ,CAAC;IAC3BU,QAAQ,CAACC,OAAO,CAACC,KAAK,GAAGH,UAAU,CAACZ,WAAW;IAC/CX,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;;EAED;EACA,MAAM2B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI7D,IAAI,IAAIE,EAAE,EAAE;MACde,aAAa,CAAC,IAAI,CAAC;MACnBR,QAAQ,CAAC,IAAI,CAAC;MACdJ,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MAEf,IAAI;QACF,MAAM6B,QAAQ,GAAG,MAAMtD,KAAK,CAACgF,IAAI,CAAC,4DAA4D,EAAE;UAC9FX,WAAW,EAAE,CACX,CAACnD,IAAI,CAACoD,GAAG,EAAEpD,IAAI,CAACiD,GAAG,CAAC,EACpB,CAAC/C,EAAE,CAACkD,GAAG,EAAElD,EAAE,CAAC+C,GAAG,CAAC;QAEpB,CAAC,EAAE;UACDc,OAAO,EAAE;YACPC,aAAa,EAAE,UAAU5C,wBAAwB;UACnD;QACF,CAAC,CAAC;QAEF,MAAM6C,SAAS,GAAG7B,QAAQ,CAACK,IAAI,CAACyB,MAAM,CAAC,CAAC,CAAC;QACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,OAAO,CAAChE,QAAQ,GAAG,IAAI,CAAC,CAAC;QAChD,MAAMiE,GAAG,GAAGJ,SAAS,CAACG,OAAO,CAAC9D,QAAQ,GAAG,EAAE,CAAC,CAAC;;QAE7CD,WAAW,CAAC,GAAG8D,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QACpC/D,WAAW,CAAC,GAAGgE,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,OAAO,CAAC;;QAEtC;QACA5D,QAAQ,CAACwD,SAAS,CAACf,QAAQ,CAACC,WAAW,CAAC;MAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CoB,KAAK,CAAC,8CAA8C,CAAC;MACvD,CAAC,SAAS;QACRxD,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,MAAM;MACLwD,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,IAAI,GAAG3E,IAAI;IACjBC,OAAO,CAACC,EAAE,CAAC;IACXC,KAAK,CAACwE,IAAI,CAAC;IACXhE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;;EAED;EACAhC,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,IAAIE,EAAE,EAAE;MACd2D,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAAC7D,IAAI,EAAEE,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAM0E,mBAAmB,GAAG,CAC1B;IAAEC,IAAI,EAAE,eAAe;IAAE7C,QAAQ,EAAE,wBAAwB;IAAE8C,MAAM,EAAE,OAAO;IAAEC,KAAK,EAAEzF;EAAgB,CAAC,EACtG;IAAEuF,IAAI,EAAE,0BAA0B;IAAE7C,QAAQ,EAAE,oBAAoB;IAAE8C,MAAM,EAAE,OAAO;IAAEC,KAAK,EAAExF;EAAW,CAAC,EACxG;IAAEsF,IAAI,EAAE,aAAa;IAAE7C,QAAQ,EAAE,WAAW;IAAE8C,MAAM,EAAE,OAAO;IAAEC,KAAK,EAAEvF;EAAc,CAAC,CACtF;EAED,MAAMwF,aAAa,GAAG,CACpB;IAAEH,IAAI,EAAE,0BAA0B;IAAE7C,QAAQ,EAAE,sBAAsB;IAAEiD,IAAI,EAAE,oBAAoB;IAAEF,KAAK,EAAEtF;EAAW,CAAC,EACrH;IAAEoF,IAAI,EAAE,oBAAoB;IAAE7C,QAAQ,EAAE,0BAA0B;IAAEiD,IAAI,EAAE,kBAAkB;IAAEF,KAAK,EAAErF;EAAY,CAAC,EAClH;IAAEmF,IAAI,EAAE,sBAAsB;IAAE7C,QAAQ,EAAE,wBAAwB;IAAEiD,IAAI,EAAE,oBAAoB;IAAEF,KAAK,EAAEpF;EAAgB,CAAC,CACzH;EAED,oBACEE,OAAA;IAAKqF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BtF,OAAA;MAAKqF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAE9BtF,OAAA;QAAKuF,KAAK,EAAE;UAAEpC,QAAQ,EAAE;QAAW,CAAE;QAAAmC,QAAA,gBACnCtF,OAAA;UACEwF,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,MAAM;UAClBC,GAAG,EAAErE,OAAQ;UACbsE,QAAQ,EAAGC,CAAC,IAAKlC,iBAAiB,CAACkC,CAAC,CAACC,MAAM,CAAC9B,KAAK,EAAE3D,OAAO,EAAEU,kBAAkB;QAAE;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC,EACDpF,eAAe,CAACyB,MAAM,GAAG,CAAC,iBACzBtC,OAAA;UAAIqF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC7BzE,eAAe,CAACiC,GAAG,CAAC,CAACc,UAAU,EAAEsC,KAAK,kBACrClG,OAAA;YAAgBmG,OAAO,EAAEA,CAAA,KAAMxC,gBAAgB,CAACC,UAAU,EAAExD,OAAO,EAAEiB,OAAO,EAAEP,kBAAkB,CAAE;YAAAwE,QAAA,EAC/F1B,UAAU,CAACZ;UAAW,GADhBkD,KAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNjG,OAAA;QAAQmG,OAAO,EAAEtB,aAAc;QAAAS,QAAA,EAAC;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAG1CjG,OAAA;QAAKuF,KAAK,EAAE;UAAEpC,QAAQ,EAAE;QAAW,CAAE;QAAAmC,QAAA,gBACnCtF,OAAA;UACEwF,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,IAAI;UAChBC,GAAG,EAAEpE,KAAM;UACXqE,QAAQ,EAAGC,CAAC,IAAKlC,iBAAiB,CAACkC,CAAC,CAACC,MAAM,CAAC9B,KAAK,EAAEzD,KAAK,EAAEU,gBAAgB;QAAE;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,EACDlF,aAAa,CAACuB,MAAM,GAAG,CAAC,iBACvBtC,OAAA;UAAIqF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC7BvE,aAAa,CAAC+B,GAAG,CAAC,CAACc,UAAU,EAAEsC,KAAK,kBACnClG,OAAA;YAAgBmG,OAAO,EAAEA,CAAA,KAAMxC,gBAAgB,CAACC,UAAU,EAAEtD,KAAK,EAAEgB,KAAK,EAAEN,gBAAgB,CAAE;YAAAsE,QAAA,EACzF1B,UAAU,CAACZ;UAAW,GADhBkD,KAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNjG,OAAA;QAAKqF,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCtF,OAAA;UAAAsF,QAAA,gBACEtF,OAAA;YACEwF,IAAI,EAAC,OAAO;YACZzB,KAAK,EAAC,SAAS;YACfqC,OAAO,EAAEnF,UAAU,KAAK,SAAU;YAClC0E,QAAQ,EAAEA,CAAA,KAAMzE,aAAa,CAAC,SAAS;UAAE;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRjG,OAAA;UAAAsF,QAAA,gBACEtF,OAAA;YACEwF,IAAI,EAAC,OAAO;YACZzB,KAAK,EAAC,SAAS;YACfqC,OAAO,EAAEnF,UAAU,KAAK,SAAU;YAClC0E,QAAQ,EAAEA,CAAA,KAAMzE,aAAa,CAAC,SAAS;UAAE;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRjG,OAAA;UAAAsF,QAAA,gBACEtF,OAAA;YACEwF,IAAI,EAAC,OAAO;YACZzB,KAAK,EAAC,WAAW;YACjBqC,OAAO,EAAEnF,UAAU,KAAK,WAAY;YACpC0E,QAAQ,EAAEA,CAAA,KAAMzE,aAAa,CAAC,WAAW;UAAE;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,aAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNjG,OAAA;QAAQmG,OAAO,EAAEnC,cAAe;QAACqC,QAAQ,EAAElF,UAAW;QAAAmE,QAAA,EAAC;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eAGNjG,OAAA;MAAKqF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B/E,QAAQ,IAAIE,QAAQ,iBACnBT,OAAA;QAAAsF,QAAA,gBACEtF,OAAA;UAAAsF,QAAA,GAAI,YAAU,EAAC/E,QAAQ;QAAA;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7BjG,OAAA;UAAAsF,QAAA,GAAI,YAAU,EAAC7E,QAAQ;QAAA;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNjG,OAAA;MAAKuF,KAAK,EAAE;QAAEe,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAjB,QAAA,eAC7CtF,OAAA,CAACb,YAAY;QAACqH,MAAM,EAAErG,IAAI,GAAG,CAACA,IAAI,CAACiD,GAAG,EAAEjD,IAAI,CAACoD,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAE;QAACkD,IAAI,EAAE,EAAG;QAAClB,KAAK,EAAE;UAAEe,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAjB,QAAA,gBACzHtF,OAAA,CAACZ,SAAS;UAACsH,GAAG,EAAC;QAAoD;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACrE9F,IAAI,iBAAIH,OAAA,CAACX,MAAM;UAAC8D,QAAQ,EAAE,CAAChD,IAAI,CAACiD,GAAG,EAAEjD,IAAI,CAACoD,GAAG,CAAE;UAAA+B,QAAA,eAACtF,OAAA,CAACV,KAAK;YAAAgG,QAAA,EAAC;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACrF5F,EAAE,iBAAIL,OAAA,CAACX,MAAM;UAAC8D,QAAQ,EAAE,CAAC9C,EAAE,CAAC+C,GAAG,EAAE/C,EAAE,CAACkD,GAAG,CAAE;UAAA+B,QAAA,eAACtF,OAAA,CAACV,KAAK;YAAAgG,QAAA,EAAC;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7EtF,KAAK,iBAAIX,OAAA,CAACT,QAAQ;UAACoH,SAAS,EAAEhG,KAAK,CAACmC,GAAG,CAAC8D,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;UAACC,KAAK,EAAC;QAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGNjG,OAAA;MAAKqF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtF,OAAA;QAAAsF,QAAA,EAAI;MAAoB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BjG,OAAA;QAAKqF,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAClCP,mBAAmB,CAACjC,GAAG,CAAC,CAACgE,WAAW,EAAEZ,KAAK,kBAC1ClG,OAAA;UAAiBqF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACtCtF,OAAA;YAAK+G,GAAG,EAAED,WAAW,CAAC5B,KAAM;YAAC8B,GAAG,EAAEF,WAAW,CAAC9B,IAAK;YAACK,SAAS,EAAC;UAAmB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpFjG,OAAA;YAAKqF,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BtF,OAAA;cAAAsF,QAAA,EAAKwB,WAAW,CAAC9B;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BjG,OAAA;cAAAsF,QAAA,EAAIwB,WAAW,CAAC3E;YAAQ;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BjG,OAAA;cAAGqF,SAAS,EAAC,QAAQ;cAAAC,QAAA,EAAEwB,WAAW,CAAC7B;YAAM;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA,GANEC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjG,OAAA,CAACd,IAAI;QAACmB,EAAE,EAAC,eAAe;QAAAiF,QAAA,eACtBtF,OAAA;UAAQqF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAoB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNjG,OAAA;MAAKqF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtF,OAAA;QAAAsF,QAAA,EAAI;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBjG,OAAA;QAAKqF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BH,aAAa,CAACrC,GAAG,CAAC,CAACmE,KAAK,EAAEf,KAAK,kBAC9BlG,OAAA;UAAiBqF,SAAS,EAAC,OAAO;UAAAC,QAAA,gBAChCtF,OAAA;YAAK+G,GAAG,EAAEE,KAAK,CAAC/B,KAAM;YAAC8B,GAAG,EAAEC,KAAK,CAACjC,IAAK;YAACK,SAAS,EAAC;UAAa;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClEjG,OAAA;YAAKqF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBtF,OAAA;cAAAsF,QAAA,EAAK2B,KAAK,CAACjC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBjG,OAAA;cAAAsF,QAAA,EAAI2B,KAAK,CAAC9E;YAAQ;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBjG,OAAA;cAAAsF,QAAA,EAAI2B,KAAK,CAAC7B;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA,GANEC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjG,OAAA,CAACd,IAAI;QAACmB,EAAE,EAAC,SAAS;QAAAiF,QAAA,eAChBtF,OAAA;UAAQqF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAc;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/F,EAAA,CApRID,IAAI;AAAAiH,EAAA,GAAJjH,IAAI;AAsRV,eAAeA,IAAI;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}