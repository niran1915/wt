{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\nimport lalbaghImg from '../images/lalbagh.jpg';\nimport cubbonParkImg from '../images/cubbon-park.jpg';\nimport concertImg from '../images/concert.jpg';\nimport marathonImg from '../images/marathon.jpg';\nimport foodFestivalImg from '../images/food-festival.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('driving'); // Default travel mode\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const OPENCAGE_API_KEY = process.env.REACT_APP_OPENCAGE_API_KEY; // API key from .env\n  console.log('OpenCage API key', process.env.REACT_APP_OPENCAGE_API_KEY);\n\n  // Debounce function for handling input change delay\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  // Fetch place suggestions from OpenCage API\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      const response = await axios.get('https://api.opencagedata.com/geocode/v1/json', {\n        params: {\n          q: location,\n          // The location query\n          key: OPENCAGE_API_KEY,\n          language: 'en' // Set the language to English\n        }\n      });\n      if (response.data.results && response.data.results.length > 0) {\n        setSuggestions(response.data.results.map(place => ({\n          displayName: place.formatted,\n          // The full address or place name\n          position: {\n            lat: place.geometry.lat,\n            lng: place.geometry.lng\n          } // Lat/Lng coordinates\n        })));\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error('Error fetching places:', error);\n      setSuggestions([]);\n    }\n  };\n\n  // Handle place change with debounce\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n\n  // Select a suggestion and update the input field\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\n    setter(suggestion.position); // Set the place position (lat/lng)\n    inputRef.current.value = suggestion.displayName; // Set the display name in the input\n    setSuggestions([]); // Clear the suggestions list\n  };\n\n  // Haversine formula to calculate distance between two lat/lng points\n  const haversine = (coords1, coords2) => {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (coords2.lat - coords1.lat) * (Math.PI / 180);\n    const dLng = (coords2.lng - coords1.lng) * (Math.PI / 180);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coords1.lat * (Math.PI / 180)) * Math.cos(coords2.lat * (Math.PI / 180)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  };\n\n  // Calculate the route distance and duration\n  const calculateRoute = () => {\n    if (from && to) {\n      setRoute(null); // Reset previous route\n      setDistance('');\n      setDuration('');\n      try {\n        // Calculate distance using the Haversine formula\n        const dist = haversine(from, to);\n        setDistance(`${dist.toFixed(2)} km`);\n\n        // Estimate duration based on an average speed (e.g., 50 km/h for driving)\n        const avgSpeed = 50; // km/h\n        const duration = dist / avgSpeed * 60; // duration in minutes\n        setDuration(`${Math.round(duration)} mins`);\n      } catch (error) {\n        console.error('Error calculating route:', error);\n        alert('Failed to calculate route. Please try again.');\n      }\n    } else {\n      alert(\"Please select both the start and end locations.\");\n    }\n  };\n\n  // Swap the start and end locations\n  const swapLocations = () => {\n    const temp = from;\n    setFrom(to);\n    setTo(temp);\n    setFromSuggestions([]); // Clear the suggestions when swapping\n    setToSuggestions([]);\n  };\n\n  // Bangalore specific popular destinations\n  const popularDestinations = [{\n    name: \"ISKCON Temple\",\n    location: \"Rajajinagar, Bangalore\",\n    rating: \"4.2 ⭐\",\n    image: iskconTempleImg\n  }, {\n    name: \"Lalbagh Botanical Garden\",\n    location: \"Mavalli, Bangalore\",\n    rating: \"4.7 ⭐\",\n    image: lalbaghImg\n  }, {\n    name: \"Cubbon Park\",\n    location: \"Bangalore\",\n    rating: \"4.5 ⭐\",\n    image: cubbonParkImg\n  }];\n\n  // Bangalore specific popular events\n  const popularEvents = [{\n    name: \"Live Concert by XYZ Band\",\n    location: \"ABC Arena, Bangalore\",\n    date: \"12th December 2024\",\n    image: concertImg\n  }, {\n    name: \"City Marathon 2024\",\n    location: \"Downtown Park, Bangalore\",\n    date: \"5th January 2024\",\n    image: marathonImg\n  }, {\n    name: \"Annual Food Festival\",\n    location: \"City Square, Bangalore\",\n    date: \"20th November 2024\",\n    image: foodFestivalImg\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: swapLocations,\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setTo, toRef, setToSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"driving\",\n            checked: travelMode === 'driving',\n            onChange: () => setTravelMode('driving')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), \"Driving\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"walking\",\n            checked: travelMode === 'walking',\n            onChange: () => setTravelMode('walking')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), \"Walking\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"bicycling\",\n            checked: travelMode === 'bicycling',\n            onChange: () => setTravelMode('bicycling')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), \"Bicycling\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-details\",\n      children: distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Destinations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-destinations\",\n        children: popularDestinations.map((destination, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: destination.image,\n            alt: destination.name,\n            className: \"destination-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: destination.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: destination.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rating\",\n              children: destination.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/destinations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow-btn\",\n          children: \"See All Destinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-events\",\n        children: popularEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.image,\n            alt: event.name,\n            className: \"event-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow-btn\",\n          children: \"See All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"nEtdqw9aP7Yhq5RhiCObaxn9BZk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","axios","Link","iskconTempleImg","lalbaghImg","cubbonParkImg","concertImg","marathonImg","foodFestivalImg","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","fromRef","toRef","OPENCAGE_API_KEY","process","env","REACT_APP_OPENCAGE_API_KEY","console","log","debounce","func","delay","timeout","args","clearTimeout","setTimeout","fetchSuggestions","location","setter","setSuggestions","length","response","get","params","q","key","language","data","results","map","place","displayName","formatted","position","lat","geometry","lng","error","handlePlaceChange","selectSuggestion","suggestion","inputRef","current","value","haversine","coords1","coords2","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","calculateRoute","dist","toFixed","avgSpeed","round","alert","swapLocations","temp","popularDestinations","name","rating","image","popularEvents","date","className","children","style","type","placeholder","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","checked","destination","src","alt","event","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\r\nimport lalbaghImg from '../images/lalbagh.jpg';\r\nimport cubbonParkImg from '../images/cubbon-park.jpg';\r\nimport concertImg from '../images/concert.jpg';\r\nimport marathonImg from '../images/marathon.jpg';\r\nimport foodFestivalImg from '../images/food-festival.jpg';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('driving');  // Default travel mode\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const OPENCAGE_API_KEY = process.env.REACT_APP_OPENCAGE_API_KEY;  // API key from .env\r\n  console.log('OpenCage API key',process.env.REACT_APP_OPENCAGE_API_KEY);\r\n\r\n  // Debounce function for handling input change delay\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  // Fetch place suggestions from OpenCage API\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get('https://api.opencagedata.com/geocode/v1/json', {\r\n        params: {\r\n          q: location,  // The location query\r\n          key: OPENCAGE_API_KEY,\r\n          language: 'en', // Set the language to English\r\n        },\r\n      });\r\n\r\n      if (response.data.results && response.data.results.length > 0) {\r\n        setSuggestions(response.data.results.map((place) => ({\r\n          displayName: place.formatted,  // The full address or place name\r\n          position: { lat: place.geometry.lat, lng: place.geometry.lng }, // Lat/Lng coordinates\r\n        })));\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  // Handle place change with debounce\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  // Select a suggestion and update the input field\r\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\r\n    setter(suggestion.position); // Set the place position (lat/lng)\r\n    inputRef.current.value = suggestion.displayName; // Set the display name in the input\r\n    setSuggestions([]); // Clear the suggestions list\r\n  };\r\n\r\n  // Haversine formula to calculate distance between two lat/lng points\r\n  const haversine = (coords1, coords2) => {\r\n    const R = 6371; // Radius of the Earth in km\r\n    const dLat = (coords2.lat - coords1.lat) * (Math.PI / 180);\r\n    const dLng = (coords2.lng - coords1.lng) * (Math.PI / 180);\r\n\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n              Math.cos(coords1.lat * (Math.PI / 180)) * Math.cos(coords2.lat * (Math.PI / 180)) *\r\n              Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const distance = R * c; // Distance in km\r\n    return distance;\r\n  };\r\n\r\n  // Calculate the route distance and duration\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      setRoute(null);  // Reset previous route\r\n      setDistance('');\r\n      setDuration('');\r\n\r\n      try {\r\n        // Calculate distance using the Haversine formula\r\n        const dist = haversine(from, to);\r\n        setDistance(`${dist.toFixed(2)} km`);\r\n\r\n        // Estimate duration based on an average speed (e.g., 50 km/h for driving)\r\n        const avgSpeed = 50; // km/h\r\n        const duration = (dist / avgSpeed) * 60; // duration in minutes\r\n        setDuration(`${Math.round(duration)} mins`);\r\n      } catch (error) {\r\n        console.error('Error calculating route:', error);\r\n        alert('Failed to calculate route. Please try again.');\r\n      }\r\n    } else {\r\n      alert(\"Please select both the start and end locations.\");\r\n    }\r\n  };\r\n\r\n  // Swap the start and end locations\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n    setFromSuggestions([]); // Clear the suggestions when swapping\r\n    setToSuggestions([]);\r\n  };\r\n\r\n  // Bangalore specific popular destinations\r\n  const popularDestinations = [\r\n    {\r\n      name: \"ISKCON Temple\",\r\n      location: \"Rajajinagar, Bangalore\",\r\n      rating: \"4.2 ⭐\",\r\n      image: iskconTempleImg\r\n    },\r\n    {\r\n      name: \"Lalbagh Botanical Garden\",\r\n      location: \"Mavalli, Bangalore\",\r\n      rating: \"4.7 ⭐\",\r\n      image: lalbaghImg\r\n    },\r\n    {\r\n      name: \"Cubbon Park\",\r\n      location: \"Bangalore\",\r\n      rating: \"4.5 ⭐\",\r\n      image: cubbonParkImg\r\n    },\r\n  ];\r\n\r\n  // Bangalore specific popular events\r\n  const popularEvents = [\r\n    {\r\n      name: \"Live Concert by XYZ Band\",\r\n      location: \"ABC Arena, Bangalore\",\r\n      date: \"12th December 2024\",\r\n      image: concertImg\r\n    },\r\n    {\r\n      name: \"City Marathon 2024\",\r\n      location: \"Downtown Park, Bangalore\",\r\n      date: \"5th January 2024\",\r\n      image: marathonImg\r\n    },\r\n    {\r\n      name: \"Annual Food Festival\",\r\n      location: \"City Square, Bangalore\",\r\n      date: \"20th November 2024\",\r\n      image: foodFestivalImg\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Location Selection Section */}\r\n      <div className=\"location-select\">\r\n        {/* From Location Input */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Swap Button */}\r\n        <button onClick={swapLocations}>⇄</button>\r\n\r\n        {/* To Location Input */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setTo, toRef, setToSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Travel Mode Selector */}\r\n        <div className=\"travel-mode-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"driving\"\r\n              checked={travelMode === 'driving'}\r\n              onChange={() => setTravelMode('driving')}\r\n            />\r\n            Driving\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"walking\"\r\n              checked={travelMode === 'walking'}\r\n              onChange={() => setTravelMode('walking')}\r\n            />\r\n            Walking\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"bicycling\"\r\n              checked={travelMode === 'bicycling'}\r\n              onChange={() => setTravelMode('bicycling')}\r\n            />\r\n            Bicycling\r\n          </label>\r\n        </div>\r\n\r\n        {/* Get Route Button */}\r\n        <button onClick={calculateRoute}>Get Route</button>\r\n      </div>\r\n\r\n      {/* Distance and Duration */}\r\n      <div className=\"route-details\">\r\n        {distance && duration && (\r\n          <div>\r\n            <h3>Distance: {distance}</h3>\r\n            <h3>Duration: {duration}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Popular Destinations */}\r\n      <div className=\"popular-sections\">\r\n        <h2>Popular Destinations</h2>\r\n        <div className=\"popular-destinations\">\r\n          {popularDestinations.map((destination, index) => (\r\n            <div key={index} className=\"destination\">\r\n              <img src={destination.image} alt={destination.name} className=\"destination-image\" />\r\n              <div className=\"destination-info\">\r\n                <h3>{destination.name}</h3>\r\n                <p>{destination.location}</p>\r\n                <p className=\"rating\">{destination.rating}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Link to=\"/destinations\">\r\n          <button className=\"scroll-arrow-btn\">See All Destinations</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Popular Events */}\r\n      <div className=\"popular-sections\">\r\n        <h2>Popular Events</h2>\r\n        <div className=\"popular-events\">\r\n          {popularEvents.map((event, index) => (\r\n            <div key={index} className=\"event\">\r\n              <img src={event.image} alt={event.name} className=\"event-image\" />\r\n              <div className=\"event-info\">\r\n                <h3>{event.name}</h3>\r\n                <p>{event.location}</p>\r\n                <p>{event.date}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Link to=\"/events\">\r\n          <button className=\"scroll-arrow-btn\">See All Events</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}