{"ast":null,"code":"var _jsxFileName = \"G:\\\\travel-buddy\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>â‡„</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline } from 'react-leaflet';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('driving'); // Default travel mode\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const mapRef = useRef();\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n  const RAPIDAPI_KEY_GEOCODING = process.env.REACT_APP_RAPIDAPI_KEY_GEOCODING;\n  const RAPIDAPI_KEY_ROUTING = process.env.REACT_APP_RAPIDAPI_KEY_ROUTING;\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    const url = `https://opencagedata-geocoding.p.rapidapi.com/geocode/v1/json`;\n    try {\n      const response = await axios.get(url, {\n        headers: {\n          'X-RapidAPI-Key': RAPIDAPI_KEY_GEOCODING,\n          'X-RapidAPI-Host': 'opencagedata-geocoding.p.rapidapi.com'\n        },\n        params: {\n          q: location,\n          limit: 5\n        }\n      });\n      setSuggestions(response.data.results.map(place => ({\n        displayName: place.formatted,\n        position: {\n          lat: place.geometry.lat,\n          lng: place.geometry.lng\n        }\n      })));\n    } catch (error) {\n      console.error(\"Error fetching places:\", error);\n    }\n  };\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\n    setter(suggestion.position);\n    inputRef.current.value = suggestion.displayName;\n    setSuggestions([]);\n  };\n  const calculateRoute = async () => {\n    if (from && to) {\n      const url = `https://api.openrouteservice.org/v2/directions/${travelMode}`;\n      try {\n        const response = await axios.post(url, {\n          coordinates: [[from.lng, from.lat], [to.lng, to.lat]]\n        }, {\n          headers: {\n            'Authorization': RAPIDAPI_KEY_ROUTING,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.data && response.data.routes.length > 0) {\n          const routeData = response.data.routes[0];\n          const geometry = routeData.geometry.coordinates.map(coord => ({\n            lat: coord[1],\n            lng: coord[0]\n          }));\n          setRoute(geometry);\n          setDistance((routeData.summary.distance / 1000).toFixed(2) + ' km');\n          setDuration(Math.round(routeData.summary.duration / 60) + ' mins');\n          const map = mapRef.current;\n          if (map) {\n            const bounds = L.latLngBounds(geometry);\n            map.fitBounds(bounds);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error calculating route:\", error);\n      }\n    }\n  };\n  const swapLocations = () => {\n    const temp = from;\n    setFrom(to);\n    setTo(temp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: swapLocations,\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setTo, toRef, setToSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"travel-mode-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"travelMode\",\n        children: \"Travel Mode: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"travelMode\",\n        value: travelMode,\n        onChange: e => setTravelMode(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"driving-car\",\n          children: \"Driving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cycling-regular\",\n          children: \"Cycling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"foot-walking\",\n          children: \"Walking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: from || {\n        lat: 37.7749,\n        lng: -122.4194\n      },\n      zoom: 13,\n      ref: mapRef,\n      style: {\n        height: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), from && /*#__PURE__*/_jsxDEV(Marker, {\n        position: from,\n        icon: new L.Icon({\n          iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png',\n          iconSize: [25, 41]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 18\n      }, this), to && /*#__PURE__*/_jsxDEV(Marker, {\n        position: to,\n        icon: new L.Icon({\n          iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png',\n          iconSize: [25, 41]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 16\n      }, this), route && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-info\",\n      children: distance && duration ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Approximate Time: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select start and end locations to calculate the route.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"About Our Travel Buddy App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to our Travel Buddy app! We help you plan your journeys with ease.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Our Services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Route planning and navigation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Travel distance and time estimation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Place suggestions for your travel needs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Multiple travel modes for your convenience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"rXkySFlM7Pm3bA28A3uOfgcP7V8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","MapContainer","TileLayer","Marker","Polyline","axios","L","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","fromRef","toRef","mapRef","debounce","func","delay","timeout","args","clearTimeout","setTimeout","RAPIDAPI_KEY_GEOCODING","process","env","REACT_APP_RAPIDAPI_KEY_GEOCODING","RAPIDAPI_KEY_ROUTING","REACT_APP_RAPIDAPI_KEY_ROUTING","fetchSuggestions","location","setter","setSuggestions","length","url","response","get","headers","params","q","limit","data","results","map","place","displayName","formatted","position","lat","geometry","lng","error","console","handlePlaceChange","selectSuggestion","suggestion","inputRef","current","value","calculateRoute","post","coordinates","routes","routeData","coord","summary","toFixed","Math","round","bounds","latLngBounds","fitBounds","swapLocations","temp","className","children","style","type","placeholder","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","htmlFor","id","center","zoom","height","width","icon","Icon","iconUrl","iconSize","positions","color","_c","$RefreshReg$"],"sources":["G:/travel-buddy/src/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>â‡„</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('driving'); // Default travel mode\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n  const mapRef = useRef();\r\n\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  const RAPIDAPI_KEY_GEOCODING = process.env.REACT_APP_RAPIDAPI_KEY_GEOCODING;\r\n  const RAPIDAPI_KEY_ROUTING = process.env.REACT_APP_RAPIDAPI_KEY_ROUTING;\r\n\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n    const url = `https://opencagedata-geocoding.p.rapidapi.com/geocode/v1/json`;\r\n    try {\r\n      const response = await axios.get(url, {\r\n        headers: {\r\n          'X-RapidAPI-Key': RAPIDAPI_KEY_GEOCODING,\r\n          'X-RapidAPI-Host': 'opencagedata-geocoding.p.rapidapi.com',\r\n        },\r\n        params: { q: location, limit: 5 },\r\n      });\r\n      setSuggestions(response.data.results.map(place => ({\r\n        displayName: place.formatted,\r\n        position: { lat: place.geometry.lat, lng: place.geometry.lng },\r\n      })));\r\n    } catch (error) {\r\n      console.error(\"Error fetching places:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\r\n    setter(suggestion.position);\r\n    inputRef.current.value = suggestion.displayName;\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      const url = `https://api.openrouteservice.org/v2/directions/${travelMode}`;\r\n      try {\r\n        const response = await axios.post(\r\n          url,\r\n          {\r\n            coordinates: [[from.lng, from.lat], [to.lng, to.lat]],\r\n          },\r\n          {\r\n            headers: {\r\n              'Authorization': RAPIDAPI_KEY_ROUTING,\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        );\r\n        if (response.data && response.data.routes.length > 0) {\r\n          const routeData = response.data.routes[0];\r\n          const geometry = routeData.geometry.coordinates.map(coord => ({ lat: coord[1], lng: coord[0] }));\r\n          setRoute(geometry);\r\n          setDistance((routeData.summary.distance / 1000).toFixed(2) + ' km');\r\n          setDuration(Math.round(routeData.summary.duration / 60) + ' mins');\r\n\r\n          const map = mapRef.current;\r\n          if (map) {\r\n            const bounds = L.latLngBounds(geometry);\r\n            map.fitBounds(bounds);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error calculating route:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"location-select\">\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <button onClick={swapLocations}>â‡„</button>\r\n\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setTo, toRef, setToSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <button onClick={calculateRoute}>Get Route</button>\r\n      </div>\r\n\r\n      <div className=\"travel-mode-select\">\r\n        <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n        <select\r\n          id=\"travelMode\"\r\n          value={travelMode}\r\n          onChange={(e) => setTravelMode(e.target.value)}\r\n        >\r\n          <option value=\"driving-car\">Driving</option>\r\n          <option value=\"cycling-regular\">Cycling</option>\r\n          <option value=\"foot-walking\">Walking</option>\r\n        </select>\r\n      </div>\r\n\r\n      <MapContainer center={from || { lat: 37.7749, lng: -122.4194 }} zoom={13} ref={mapRef} style={{ height: '400px', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        \r\n        {from && <Marker position={from} icon={new L.Icon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png', iconSize: [25, 41] })} />}\r\n        {to && <Marker position={to} icon={new L.Icon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png', iconSize: [25, 41] })} />}\r\n        \r\n        {route && <Polyline positions={route} color=\"blue\" />}\r\n      </MapContainer>\r\n\r\n      <div className=\"route-info\">\r\n        {distance && duration ? (\r\n          <div>\r\n            <p>Distance: {distance}</p>\r\n            <p>Approximate Time: {duration}</p>\r\n          </div>\r\n        ) : (\r\n          <p>Please select start and end locations to calculate the route.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* New Section for App Details */}\r\n      <div className=\"app-details\">\r\n        <h2>About Our Travel Buddy App</h2>\r\n        <p>Welcome to our Travel Buddy app! We help you plan your journeys with ease.</p>\r\n        <h3>Our Services</h3>\r\n        <ul>\r\n          <li>Route planning and navigation</li>\r\n          <li>Travel distance and time estimation</li>\r\n          <li>Place suggestions for your travel needs</li>\r\n          <li>Multiple travel modes for your convenience</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}