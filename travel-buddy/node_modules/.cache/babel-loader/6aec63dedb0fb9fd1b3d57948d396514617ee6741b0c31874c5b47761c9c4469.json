{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport './Home.css';\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\nimport lalbaghImg from '../images/lalbagh.jpg';\nimport cubbonParkImg from '../images/cubbon-park.jpg';\nimport concertImg from '../images/concert.jpg';\nimport marathonImg from '../images/marathon.jpg';\nimport foodFestivalImg from '../images/food-festival.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('driving'); // Default travel mode\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const OPENROUTESERVICE_API_KEY = process.env.REACT_APP_OPENROUTESERVICE_API_KEY;\n\n  // Debounce function for handling input change delay\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  // Fetch place suggestions from OpenRouteService API\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get('https://api.openrouteservice.org/geocode/search', {\n        params: {\n          api_key: OPENROUTESERVICE_API_KEY,\n          text: location\n        }\n      });\n      if (response.data.features && response.data.features.length > 0) {\n        setSuggestions(response.data.features.map(place => ({\n          displayName: place.properties.label,\n          position: {\n            lat: place.geometry.coordinates[1],\n            lng: place.geometry.coordinates[0]\n          }\n        })));\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error('Error fetching places:', error);\n      setSuggestions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle place change with debounce\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n\n  // Select a suggestion and update the input field\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\n    setter(suggestion.position);\n    inputRef.current.value = suggestion.displayName;\n    setSuggestions([]);\n  };\n\n  // Fetch route details (distance and duration) using OpenRouteService API\n  const calculateRoute = async () => {\n    if (from && to) {\n      setRoute(null);\n      setDistance('');\n      setDuration('');\n      setLoading(true);\n      try {\n        const response = await axios.post('https://api.openrouteservice.org/v2/directions/' + travelMode, {\n          coordinates: [[from.lng, from.lat], [to.lng, to.lat]]\n        }, {\n          headers: {\n            Authorization: `Bearer ${OPENROUTESERVICE_API_KEY}`\n          }\n        });\n        const routeData = response.data.routes[0];\n        const dist = routeData.summary.distance / 1000; // Convert from meters to kilometers\n        const duration = routeData.summary.duration / 60; // Convert from seconds to minutes\n\n        setDistance(`${dist.toFixed(2)} km`);\n        setDuration(`${Math.round(duration)} mins`);\n        setRoute(routeData.geometry.coordinates); // Store the route for rendering\n      } catch (error) {\n        console.error('Error fetching route:', error);\n        alert('Failed to calculate route. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      alert('Please select both the start and end locations.');\n    }\n  };\n\n  // Bangalore specific popular destinations\n  const popularDestinations = [{\n    name: \"ISKCON Temple\",\n    location: \"Rajajinagar, Bangalore\",\n    rating: \"4.2 ⭐\",\n    image: iskconTempleImg\n  }, {\n    name: \"Lalbagh Botanical Garden\",\n    location: \"Mavalli, Bangalore\",\n    rating: \"4.7 ⭐\",\n    image: lalbaghImg\n  }, {\n    name: \"Cubbon Park\",\n    location: \"Bangalore\",\n    rating: \"4.5 ⭐\",\n    image: cubbonParkImg\n  }];\n\n  // Bangalore specific popular events\n  const popularEvents = [{\n    name: \"Live Concert by XYZ Band\",\n    location: \"ABC Arena, Bangalore\",\n    date: \"12th December 2024\",\n    image: concertImg\n  }, {\n    name: \"City Marathon 2024\",\n    location: \"Downtown Park, Bangalore\",\n    date: \"5th January 2024\",\n    image: marathonImg\n  }, {\n    name: \"Annual Food Festival\",\n    location: \"City Square, Bangalore\",\n    date: \"20th November 2024\",\n    image: foodFestivalImg\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFrom(to) && setTo(from),\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setTo, toRef, setToSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"driving\",\n            checked: travelMode === 'driving',\n            onChange: () => setTravelMode('driving')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), \"Driving\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"walking\",\n            checked: travelMode === 'walking',\n            onChange: () => setTravelMode('walking')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), \"Walking\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"bicycling\",\n            checked: travelMode === 'bicycling',\n            onChange: () => setTravelMode('bicycling')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), \"Bicycling\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        disabled: loading,\n        children: loading ? 'Calculating...' : 'Get Route'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-details\",\n      children: distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: from || to || {\n          lat: 12.9716,\n          lng: 77.5946\n        },\n        zoom: 13,\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), from && /*#__PURE__*/_jsxDEV(Marker, {\n          position: from,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Starting Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 20\n        }, this), to && /*#__PURE__*/_jsxDEV(Marker, {\n          position: to,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 18\n        }, this), route && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route.map(coord => [coord[1], coord[0]]),\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-destinations\",\n      children: popularDestinations.map((destination, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destination-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: destination.image,\n          alt: destination.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: destination.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: destination.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: destination.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-events\",\n      children: popularEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.image,\n          alt: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"PpNJ4SC0VrfVLD5DSRMbYK+ZH2c=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Link","MapContainer","TileLayer","Marker","Popup","Polyline","L","iskconTempleImg","lalbaghImg","cubbonParkImg","concertImg","marathonImg","foodFestivalImg","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","loading","setLoading","fromRef","toRef","OPENROUTESERVICE_API_KEY","process","env","REACT_APP_OPENROUTESERVICE_API_KEY","debounce","func","delay","timeout","args","clearTimeout","setTimeout","fetchSuggestions","location","setter","setSuggestions","length","response","get","params","api_key","text","data","features","map","place","displayName","properties","label","position","lat","geometry","coordinates","lng","error","console","handlePlaceChange","selectSuggestion","suggestion","inputRef","current","value","calculateRoute","post","headers","Authorization","routeData","routes","dist","summary","toFixed","Math","round","alert","popularDestinations","name","rating","image","popularEvents","date","className","children","style","type","placeholder","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","checked","disabled","center","zoom","height","width","url","positions","coord","color","destination","src","alt","event","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport './Home.css';\r\n\r\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\r\nimport lalbaghImg from '../images/lalbagh.jpg';\r\nimport cubbonParkImg from '../images/cubbon-park.jpg';\r\nimport concertImg from '../images/concert.jpg';\r\nimport marathonImg from '../images/marathon.jpg';\r\nimport foodFestivalImg from '../images/food-festival.jpg';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('driving');  // Default travel mode\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const OPENROUTESERVICE_API_KEY = process.env.REACT_APP_OPENROUTESERVICE_API_KEY;\r\n\r\n  // Debounce function for handling input change delay\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  // Fetch place suggestions from OpenRouteService API\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('https://api.openrouteservice.org/geocode/search', {\r\n        params: {\r\n          api_key: OPENROUTESERVICE_API_KEY,\r\n          text: location,\r\n        },\r\n      });\r\n\r\n      if (response.data.features && response.data.features.length > 0) {\r\n        setSuggestions(response.data.features.map((place) => ({\r\n          displayName: place.properties.label,\r\n          position: { lat: place.geometry.coordinates[1], lng: place.geometry.coordinates[0] },\r\n        })));\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n      setSuggestions([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle place change with debounce\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  // Select a suggestion and update the input field\r\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\r\n    setter(suggestion.position);\r\n    inputRef.current.value = suggestion.displayName;\r\n    setSuggestions([]);\r\n  };\r\n\r\n  // Fetch route details (distance and duration) using OpenRouteService API\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      setRoute(null);\r\n      setDistance('');\r\n      setDuration('');\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await axios.post('https://api.openrouteservice.org/v2/directions/' + travelMode, {\r\n          coordinates: [\r\n            [from.lng, from.lat],\r\n            [to.lng, to.lat],\r\n          ],\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${OPENROUTESERVICE_API_KEY}`,\r\n          },\r\n        });\r\n\r\n        const routeData = response.data.routes[0];\r\n        const dist = routeData.summary.distance / 1000; // Convert from meters to kilometers\r\n        const duration = routeData.summary.duration / 60; // Convert from seconds to minutes\r\n\r\n        setDistance(`${dist.toFixed(2)} km`);\r\n        setDuration(`${Math.round(duration)} mins`);\r\n        setRoute(routeData.geometry.coordinates); // Store the route for rendering\r\n      } catch (error) {\r\n        console.error('Error fetching route:', error);\r\n        alert('Failed to calculate route. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      alert('Please select both the start and end locations.');\r\n    }\r\n  };\r\n\r\n  // Bangalore specific popular destinations\r\n  const popularDestinations = [\r\n    {\r\n      name: \"ISKCON Temple\",\r\n      location: \"Rajajinagar, Bangalore\",\r\n      rating: \"4.2 ⭐\",\r\n      image: iskconTempleImg,\r\n    },\r\n    {\r\n      name: \"Lalbagh Botanical Garden\",\r\n      location: \"Mavalli, Bangalore\",\r\n      rating: \"4.7 ⭐\",\r\n      image: lalbaghImg,\r\n    },\r\n    {\r\n      name: \"Cubbon Park\",\r\n      location: \"Bangalore\",\r\n      rating: \"4.5 ⭐\",\r\n      image: cubbonParkImg,\r\n    },\r\n  ];\r\n\r\n  // Bangalore specific popular events\r\n  const popularEvents = [\r\n    {\r\n      name: \"Live Concert by XYZ Band\",\r\n      location: \"ABC Arena, Bangalore\",\r\n      date: \"12th December 2024\",\r\n      image: concertImg,\r\n    },\r\n    {\r\n      name: \"City Marathon 2024\",\r\n      location: \"Downtown Park, Bangalore\",\r\n      date: \"5th January 2024\",\r\n      image: marathonImg,\r\n    },\r\n    {\r\n      name: \"Annual Food Festival\",\r\n      location: \"City Square, Bangalore\",\r\n      date: \"20th November 2024\",\r\n      image: foodFestivalImg,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Location Selection Section */}\r\n      <div className=\"location-select\">\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <button onClick={() => setFrom(to) && setTo(from)}>⇄</button>\r\n\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setTo, toRef, setToSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"travel-mode-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"driving\"\r\n              checked={travelMode === 'driving'}\r\n              onChange={() => setTravelMode('driving')}\r\n            />\r\n            Driving\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"walking\"\r\n              checked={travelMode === 'walking'}\r\n              onChange={() => setTravelMode('walking')}\r\n            />\r\n            Walking\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"bicycling\"\r\n              checked={travelMode === 'bicycling'}\r\n              onChange={() => setTravelMode('bicycling')}\r\n            />\r\n            Bicycling\r\n          </label>\r\n        </div>\r\n\r\n        <button onClick={calculateRoute} disabled={loading}>\r\n          {loading ? 'Calculating...' : 'Get Route'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Distance and Duration */}\r\n      <div className=\"route-details\">\r\n        {distance && duration && (\r\n          <div>\r\n            <h3>Distance: {distance}</h3>\r\n            <h3>Duration: {duration}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Map Container */}\r\n      <div className=\"map-container\">\r\n        <MapContainer center={from || to || { lat: 12.9716, lng: 77.5946 }} zoom={13} style={{ height: '400px', width: '100%' }}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          {from && <Marker position={from}><Popup>Starting Point</Popup></Marker>}\r\n          {to && <Marker position={to}><Popup>Destination</Popup></Marker>}\r\n          {route && (\r\n            <Polyline positions={route.map(coord => [coord[1], coord[0]])} color=\"blue\" />\r\n          )}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Popular Destinations */}\r\n      <div className=\"popular-destinations\">\r\n        {popularDestinations.map((destination, index) => (\r\n          <div key={index} className=\"destination-card\">\r\n            <img src={destination.image} alt={destination.name} />\r\n            <h3>{destination.name}</h3>\r\n            <p>{destination.location}</p>\r\n            <p>{destination.rating}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Popular Events */}\r\n      <div className=\"popular-events\">\r\n        {popularEvents.map((event, index) => (\r\n          <div key={index} className=\"event-card\">\r\n            <img src={event.image} alt={event.name} />\r\n            <h3>{event.name}</h3>\r\n            <p>{event.location}</p>\r\n            <p>{event.date}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}