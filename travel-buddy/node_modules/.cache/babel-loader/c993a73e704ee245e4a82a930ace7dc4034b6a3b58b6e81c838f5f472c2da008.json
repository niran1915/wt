{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet'; // Import Leaflet for custom marker icons\n\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\nimport lalbaghImg from '../images/lalbagh.jpg';\nimport cubbonParkImg from '../images/cubbon-park.jpg';\nimport concertImg from '../images/concert.jpg';\nimport marathonImg from '../images/marathon.jpg';\nimport foodFestivalImg from '../images/food-festival.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('driving');\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const [routeCoordinates, setRouteCoordinates] = useState([]); // Coordinates for the route polyline\n\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const OPENROUTESERVICE_API_KEY = process.env.REACT_APP_OPENROUTESERVICE_API_KEY;\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      const response = await axios.get('https://api.openrouteservice.org/geocode/search', {\n        params: {\n          api_key: OPENROUTESERVICE_API_KEY,\n          text: location\n        }\n      });\n      if (response.data.features && response.data.features.length > 0) {\n        setSuggestions(response.data.features.map(place => ({\n          displayName: place.properties.label,\n          position: {\n            lat: place.geometry.coordinates[1],\n            lng: place.geometry.coordinates[0]\n          }\n        })));\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error('Error fetching places:', error);\n      setSuggestions([]);\n    }\n  };\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\n    setter(suggestion.position);\n    inputRef.current.value = suggestion.displayName;\n    setSuggestions([]);\n  };\n  const calculateRoute = async () => {\n    if (from && to) {\n      setRoute(null);\n      setDistance('');\n      setDuration('');\n      try {\n        const response = await axios.post('https://api.openrouteservice.org/v2/directions/driving-car', {\n          coordinates: [[from.lng, from.lat], [to.lng, to.lat]]\n        }, {\n          headers: {\n            Authorization: `Bearer ${OPENROUTESERVICE_API_KEY}`\n          }\n        });\n        const routeData = response.data.routes[0];\n        const dist = routeData.summary.distance / 1000;\n        const duration = routeData.summary.duration / 60;\n        setDistance(`${dist.toFixed(2)} km`);\n        setDuration(`${Math.round(duration)} mins`);\n\n        // Set the route coordinates for polyline\n        const coordinates = routeData.geometry.coordinates.map(([lng, lat]) => ({\n          lat,\n          lng\n        }));\n        setRouteCoordinates(coordinates);\n      } catch (error) {\n        console.error('Error fetching route:', error);\n        alert('Failed to calculate route. Please try again.');\n      }\n    } else {\n      alert(\"Please select both the start and end locations.\");\n    }\n  };\n  const swapLocations = () => {\n    const temp = from;\n    setFrom(to);\n    setTo(temp);\n    setFromSuggestions([]);\n    setToSuggestions([]);\n  };\n  const popularDestinations = [{\n    name: \"ISKCON Temple\",\n    location: \"Rajajinagar, Bangalore\",\n    rating: \"4.2 ⭐\",\n    image: iskconTempleImg\n  }, {\n    name: \"Lalbagh Botanical Garden\",\n    location: \"Mavalli, Bangalore\",\n    rating: \"4.7 ⭐\",\n    image: lalbaghImg\n  }, {\n    name: \"Cubbon Park\",\n    location: \"Bangalore\",\n    rating: \"4.5 ⭐\",\n    image: cubbonParkImg\n  }];\n  const popularEvents = [{\n    name: \"Live Concert by XYZ Band\",\n    location: \"ABC Arena, Bangalore\",\n    date: \"12th December 2024\",\n    image: concertImg\n  }, {\n    name: \"City Marathon 2024\",\n    location: \"Downtown Park, Bangalore\",\n    date: \"5th January 2024\",\n    image: marathonImg\n  }, {\n    name: \"Annual Food Festival\",\n    location: \"City Square, Bangalore\",\n    date: \"20th November 2024\",\n    image: foodFestivalImg\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: swapLocations,\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setTo, toRef, setToSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"driving\",\n            checked: travelMode === 'driving',\n            onChange: () => setTravelMode('driving')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), \"Driving\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"walking\",\n            checked: travelMode === 'walking',\n            onChange: () => setTravelMode('walking')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), \"Walking\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"bicycling\",\n            checked: travelMode === 'bicycling',\n            onChange: () => setTravelMode('bicycling')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), \"Bicycling\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-details\",\n      children: distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: from && to && routeCoordinates.length > 0 && /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [from.lat, from.lng],\n        zoom: 12,\n        style: {\n          width: '100%',\n          height: '300px',\n          borderRadius: '8px',\n          boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [from.lat, from.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Start: \", from]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [to.lat, to.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"End: \", to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: routeCoordinates,\n          color: \"blue\",\n          weight: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"popular-destinations\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Destinations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destination-cards\",\n        children: popularDestinations.map((destination, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: destination.image,\n            alt: destination.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: destination.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: destination.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: destination.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"popular-events\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-cards\",\n        children: popularEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.image,\n            alt: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"LtkrRF9rFyYU5vmeIWVTKHm4jSw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","axios","Link","MapContainer","TileLayer","Marker","Popup","Polyline","L","iskconTempleImg","lalbaghImg","cubbonParkImg","concertImg","marathonImg","foodFestivalImg","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","routeCoordinates","setRouteCoordinates","fromRef","toRef","OPENROUTESERVICE_API_KEY","process","env","REACT_APP_OPENROUTESERVICE_API_KEY","debounce","func","delay","timeout","args","clearTimeout","setTimeout","fetchSuggestions","location","setter","setSuggestions","length","response","get","params","api_key","text","data","features","map","place","displayName","properties","label","position","lat","geometry","coordinates","lng","error","console","handlePlaceChange","selectSuggestion","suggestion","inputRef","current","value","calculateRoute","post","headers","Authorization","routeData","routes","dist","summary","toFixed","Math","round","alert","swapLocations","temp","popularDestinations","name","rating","image","popularEvents","date","className","children","style","type","placeholder","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","checked","center","zoom","width","height","borderRadius","boxShadow","url","attribution","positions","color","weight","destination","src","alt","event","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport L from 'leaflet'; // Import Leaflet for custom marker icons\r\n\r\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\r\nimport lalbaghImg from '../images/lalbagh.jpg';\r\nimport cubbonParkImg from '../images/cubbon-park.jpg';\r\nimport concertImg from '../images/concert.jpg';\r\nimport marathonImg from '../images/marathon.jpg';\r\nimport foodFestivalImg from '../images/food-festival.jpg';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('driving');\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n  const [routeCoordinates, setRouteCoordinates] = useState([]); // Coordinates for the route polyline\r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const OPENROUTESERVICE_API_KEY = process.env.REACT_APP_OPENROUTESERVICE_API_KEY;\r\n\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get('https://api.openrouteservice.org/geocode/search', {\r\n        params: {\r\n          api_key: OPENROUTESERVICE_API_KEY,\r\n          text: location,\r\n        },\r\n      });\r\n\r\n      if (response.data.features && response.data.features.length > 0) {\r\n        setSuggestions(response.data.features.map((place) => ({\r\n          displayName: place.properties.label,\r\n          position: { lat: place.geometry.coordinates[1], lng: place.geometry.coordinates[0] },\r\n        })));\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\r\n    setter(suggestion.position);\r\n    inputRef.current.value = suggestion.displayName;\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      setRoute(null);\r\n      setDistance('');\r\n      setDuration('');\r\n\r\n      try {\r\n        const response = await axios.post('https://api.openrouteservice.org/v2/directions/driving-car', {\r\n          coordinates: [\r\n            [from.lng, from.lat],\r\n            [to.lng, to.lat],\r\n          ],\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${OPENROUTESERVICE_API_KEY}`,\r\n          },\r\n        });\r\n\r\n        const routeData = response.data.routes[0];\r\n        const dist = routeData.summary.distance / 1000;\r\n        const duration = routeData.summary.duration / 60;\r\n\r\n        setDistance(`${dist.toFixed(2)} km`);\r\n        setDuration(`${Math.round(duration)} mins`);\r\n\r\n        // Set the route coordinates for polyline\r\n        const coordinates = routeData.geometry.coordinates.map(([lng, lat]) => ({\r\n          lat,\r\n          lng,\r\n        }));\r\n        setRouteCoordinates(coordinates);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching route:', error);\r\n        alert('Failed to calculate route. Please try again.');\r\n      }\r\n    } else {\r\n      alert(\"Please select both the start and end locations.\");\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n    setFromSuggestions([]);\r\n    setToSuggestions([]);\r\n  };\r\n\r\n  const popularDestinations = [\r\n    {\r\n      name: \"ISKCON Temple\",\r\n      location: \"Rajajinagar, Bangalore\",\r\n      rating: \"4.2 ⭐\",\r\n      image: iskconTempleImg,\r\n    },\r\n    {\r\n      name: \"Lalbagh Botanical Garden\",\r\n      location: \"Mavalli, Bangalore\",\r\n      rating: \"4.7 ⭐\",\r\n      image: lalbaghImg,\r\n    },\r\n    {\r\n      name: \"Cubbon Park\",\r\n      location: \"Bangalore\",\r\n      rating: \"4.5 ⭐\",\r\n      image: cubbonParkImg,\r\n    },\r\n  ];\r\n\r\n  const popularEvents = [\r\n    {\r\n      name: \"Live Concert by XYZ Band\",\r\n      location: \"ABC Arena, Bangalore\",\r\n      date: \"12th December 2024\",\r\n      image: concertImg,\r\n    },\r\n    {\r\n      name: \"City Marathon 2024\",\r\n      location: \"Downtown Park, Bangalore\",\r\n      date: \"5th January 2024\",\r\n      image: marathonImg,\r\n    },\r\n    {\r\n      name: \"Annual Food Festival\",\r\n      location: \"City Square, Bangalore\",\r\n      date: \"20th November 2024\",\r\n      image: foodFestivalImg,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"location-select\">\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <button onClick={swapLocations}>⇄</button>\r\n\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setTo, toRef, setToSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"travel-mode-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"driving\"\r\n              checked={travelMode === 'driving'}\r\n              onChange={() => setTravelMode('driving')}\r\n            />\r\n            Driving\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"walking\"\r\n              checked={travelMode === 'walking'}\r\n              onChange={() => setTravelMode('walking')}\r\n            />\r\n            Walking\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"bicycling\"\r\n              checked={travelMode === 'bicycling'}\r\n              onChange={() => setTravelMode('bicycling')}\r\n            />\r\n            Bicycling\r\n          </label>\r\n        </div>\r\n\r\n        <button onClick={calculateRoute}>Get Route</button>\r\n      </div>\r\n\r\n      <div className=\"route-details\">\r\n        {distance && duration && (\r\n          <div>\r\n            <h3>Distance: {distance}</h3>\r\n            <h3>Duration: {duration}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-container\">\r\n        {from && to && routeCoordinates.length > 0 && (\r\n          <MapContainer\r\n            center={[from.lat, from.lng]}\r\n            zoom={12}\r\n            style={{ width: '100%', height: '300px', borderRadius: '8px', boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)' }}\r\n          >\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={[from.lat, from.lng]}>\r\n              <Popup>Start: {from}</Popup>\r\n            </Marker>\r\n            <Marker position={[to.lat, to.lng]}>\r\n              <Popup>End: {to}</Popup>\r\n            </Marker>\r\n            <Polyline positions={routeCoordinates} color=\"blue\" weight={4} />\r\n          </MapContainer>\r\n        )}\r\n      </div>\r\n\r\n      {/* Popular Destinations */}\r\n      <section className=\"popular-destinations\">\r\n        <h2>Popular Destinations</h2>\r\n        <div className=\"destination-cards\">\r\n          {popularDestinations.map((destination, index) => (\r\n            <div key={index} className=\"destination-card\">\r\n              <img src={destination.image} alt={destination.name} />\r\n              <div className=\"destination-info\">\r\n                <h3>{destination.name}</h3>\r\n                <p>{destination.location}</p>\r\n                <p>{destination.rating}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* Popular Events */}\r\n      <section className=\"popular-events\">\r\n        <h2>Upcoming Events</h2>\r\n        <div className=\"event-cards\">\r\n          {popularEvents.map((event, index) => (\r\n            <div key={index} className=\"event-card\">\r\n              <img src={event.image} alt={event.name} />\r\n              <div className=\"event-info\">\r\n                <h3>{event.name}</h3>\r\n                <p>{event.location}</p>\r\n                <p>{event.date}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n"],"mappingszB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AACnB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChF,OAAOC,CAAC,MAAM,SAAS,CAAC,CAAC;;AAEzB,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACsB,EAAE,EAAEC,KAAK,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACgC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9D,MAAMsC,OAAO,GAAGrC,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMsC,KAAK,GAAGtC,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMuC,wBAAwB,GAAGC,OAAO,CAACC,GAAG,CAACC,kCAAkC;EAE/E,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAChC,IAAIC,OAAO;IACX,OAAO,CAAC,GAAGC,IAAI,KAAK;MAClBC,YAAY,CAACF,OAAO,CAAC;MACrBA,OAAO,GAAGG,UAAU,CAAC,MAAM;QACzBL,IAAI,CAAC,GAAGG,IAAI,CAAC;MACf,CAAC,EAAEF,KAAK,CAAC;IACX,CAAC;EACH,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,KAAK;IACnE,IAAIF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;MACzBD,cAAc,CAAC,EAAE,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,GAAG,CAAC,iDAAiD,EAAE;QAClFC,MAAM,EAAE;UACNC,OAAO,EAAEnB,wBAAwB;UACjCoB,IAAI,EAAER;QACR;MACF,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACK,IAAI,CAACC,QAAQ,IAAIN,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACP,MAAM,GAAG,CAAC,EAAE;QAC/DD,cAAc,CAACE,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAEC,KAAK,KAAM;UACpDC,WAAW,EAAED,KAAK,CAACE,UAAU,CAACC,KAAK;UACnCC,QAAQ,EAAE;YAAEC,GAAG,EAAEL,KAAK,CAACM,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;YAAEC,GAAG,EAAER,KAAK,CAACM,QAAQ,CAACC,WAAW,CAAC,CAAC;UAAE;QACrF,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,MAAM;QACLjB,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CnB,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMqB,iBAAiB,GAAG/B,QAAQ,CAAC,CAACQ,QAAQ,EAAEC,MAAM,EAAEC,cAAc,KAAK;IACvEH,gBAAgB,CAACC,QAAQ,EAAEC,MAAM,EAAEC,cAAc,CAAC;EACpD,CAAC,EAAE,GAAG,CAAC;EAEP,MAAMsB,gBAAgB,GAAGA,CAACC,UAAU,EAAExB,MAAM,EAAEyB,QAAQ,EAAExB,cAAc,KAAK;IACzED,MAAM,CAACwB,UAAU,CAACT,QAAQ,CAAC;IAC3BU,QAAQ,CAACC,OAAO,CAACC,KAAK,GAAGH,UAAU,CAACZ,WAAW;IAC/CX,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAM2B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI7D,IAAI,IAAIE,EAAE,EAAE;MACdG,QAAQ,CAAC,IAAI,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MAEf,IAAI;QACF,MAAM2B,QAAQ,GAAG,MAAMtD,KAAK,CAACgF,IAAI,CAAC,4DAA4D,EAAE;UAC9FX,WAAW,EAAE,CACX,CAACnD,IAAI,CAACoD,GAAG,EAAEpD,IAAI,CAACiD,GAAG,CAAC,EACpB,CAAC/C,EAAE,CAACkD,GAAG,EAAElD,EAAE,CAAC+C,GAAG,CAAC;QAEpB,CAAC,EAAE;UACDc,OAAO,EAAE;YACPC,aAAa,EAAE,UAAU5C,wBAAwB;UACnD;QACF,CAAC,CAAC;QAEF,MAAM6C,SAAS,GAAG7B,QAAQ,CAACK,IAAI,CAACyB,MAAM,CAAC,CAAC,CAAC;QACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,OAAO,CAAC9D,QAAQ,GAAG,IAAI;QAC9C,MAAME,QAAQ,GAAGyD,SAAS,CAACG,OAAO,CAAC5D,QAAQ,GAAG,EAAE;QAEhDD,WAAW,CAAC,GAAG4D,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QACpC5D,WAAW,CAAC,GAAG6D,IAAI,CAACC,KAAK,CAAC/D,QAAQ,CAAC,OAAO,CAAC;;QAE3C;QACA,MAAM2C,WAAW,GAAGc,SAAS,CAACf,QAAQ,CAACC,WAAW,CAACR,GAAG,CAAC,CAAC,CAACS,GAAG,EAAEH,GAAG,CAAC,MAAM;UACtEA,GAAG;UACHG;QACF,CAAC,CAAC,CAAC;QACHnC,mBAAmB,CAACkC,WAAW,CAAC;MAElC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CmB,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,IAAI,GAAG1E,IAAI;IACjBC,OAAO,CAACC,EAAE,CAAC;IACXC,KAAK,CAACuE,IAAI,CAAC;IACX7D,kBAAkB,CAAC,EAAE,CAAC;IACtBE,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAM4D,mBAAmB,GAAG,CAC1B;IACEC,IAAI,EAAE,eAAe;IACrB5C,QAAQ,EAAE,wBAAwB;IAClC6C,MAAM,EAAE,OAAO;IACfC,KAAK,EAAExF;EACT,CAAC,EACD;IACEsF,IAAI,EAAE,0BAA0B;IAChC5C,QAAQ,EAAE,oBAAoB;IAC9B6C,MAAM,EAAE,OAAO;IACfC,KAAK,EAAEvF;EACT,CAAC,EACD;IACEqF,IAAI,EAAE,aAAa;IACnB5C,QAAQ,EAAE,WAAW;IACrB6C,MAAM,EAAE,OAAO;IACfC,KAAK,EAAEtF;EACT,CAAC,CACF;EAED,MAAMuF,aAAa,GAAG,CACpB;IACEH,IAAI,EAAE,0BAA0B;IAChC5C,QAAQ,EAAE,sBAAsB;IAChCgD,IAAI,EAAE,oBAAoB;IAC1BF,KAAK,EAAErF;EACT,CAAC,EACD;IACEmF,IAAI,EAAE,oBAAoB;IAC1B5C,QAAQ,EAAE,0BAA0B;IACpCgD,IAAI,EAAE,kBAAkB;IACxBF,KAAK,EAAEpF;EACT,CAAC,EACD;IACEkF,IAAI,EAAE,sBAAsB;IAC5B5C,QAAQ,EAAE,wBAAwB;IAClCgD,IAAI,EAAE,oBAAoB;IAC1BF,KAAK,EAAEnF;EACT,CAAC,CACF;EAED,oBACEE,OAAA;IAAKoF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrF,OAAA;MAAKoF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BrF,OAAA;QAAKsF,KAAK,EAAE;UAAEnC,QAAQ,EAAE;QAAW,CAAE;QAAAkC,QAAA,gBACnCrF,OAAA;UACEuF,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,MAAM;UAClBC,GAAG,EAAEpE,OAAQ;UACbqE,QAAQ,EAAGC,CAAC,IAAKjC,iBAAiB,CAACiC,CAAC,CAACC,MAAM,CAAC7B,KAAK,EAAE3D,OAAO,EAAEY,kBAAkB;QAAE;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC,EACDjF,eAAe,CAACuB,MAAM,GAAG,CAAC,iBACzBtC,OAAA;UAAIoF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC7BtE,eAAe,CAAC+B,GAAG,CAAC,CAACc,UAAU,EAAEqC,KAAK,kBACrCjG,OAAA;YAAgBkG,OAAO,EAAEA,CAAA,KAAMvC,gBAAgB,CAACC,UAAU,EAAExD,OAAO,EAAEiB,OAAO,EAAEL,kBAAkB,CAAE;YAAAqE,QAAA,EAC/FzB,UAAU,CAACZ;UAAW,GADhBiD,KAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENhG,OAAA;QAAQkG,OAAO,EAAEtB,aAAc;QAAAS,QAAA,EAAC;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE1ChG,OAAA;QAAKsF,KAAK,EAAE;UAAEnC,QAAQ,EAAE;QAAW,CAAE;QAAAkC,QAAA,gBACnCrF,OAAA;UACEuF,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,IAAI;UAChBC,GAAG,EAAEnE,KAAM;UACXoE,QAAQ,EAAGC,CAAC,IAAKjC,iBAAiB,CAACiC,CAAC,CAACC,MAAM,CAAC7B,KAAK,EAAEzD,KAAK,EAAEY,gBAAgB;QAAE;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,EACD/E,aAAa,CAACqB,MAAM,GAAG,CAAC,iBACvBtC,OAAA;UAAIoF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC7BpE,aAAa,CAAC6B,GAAG,CAAC,CAACc,UAAU,EAAEqC,KAAK,kBACnCjG,OAAA;YAAgBkG,OAAO,EAAEA,CAAA,KAAMvC,gBAAgB,CAACC,UAAU,EAAEtD,KAAK,EAAEgB,KAAK,EAAEJ,gBAAgB,CAAE;YAAAmE,QAAA,EACzFzB,UAAU,CAACZ;UAAW,GADhBiD,KAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENhG,OAAA;QAAKoF,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCrF,OAAA;UAAAqF,QAAA,gBACErF,OAAA;YACEuF,IAAI,EAAC,OAAO;YACZxB,KAAK,EAAC,SAAS;YACfoC,OAAO,EAAEtF,UAAU,KAAK,SAAU;YAClC6E,QAAQ,EAAEA,CAAA,KAAM5E,aAAa,CAAC,SAAS;UAAE;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRhG,OAAA;UAAAqF,QAAA,gBACErF,OAAA;YACEuF,IAAI,EAAC,OAAO;YACZxB,KAAK,EAAC,SAAS;YACfoC,OAAO,EAAEtF,UAAU,KAAK,SAAU;YAClC6E,QAAQ,EAAEA,CAAA,KAAM5E,aAAa,CAAC,SAAS;UAAE;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,WAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRhG,OAAA;UAAAqF,QAAA,gBACErF,OAAA;YACEuF,IAAI,EAAC,OAAO;YACZxB,KAAK,EAAC,WAAW;YACjBoC,OAAO,EAAEtF,UAAU,KAAK,WAAY;YACpC6E,QAAQ,EAAEA,CAAA,KAAM5E,aAAa,CAAC,WAAW;UAAE;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,aAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENhG,OAAA;QAAQkG,OAAO,EAAElC,cAAe;QAAAqB,QAAA,EAAC;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAENhG,OAAA;MAAKoF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B5E,QAAQ,IAAIE,QAAQ,iBACnBX,OAAA;QAAAqF,QAAA,gBACErF,OAAA;UAAAqF,QAAA,GAAI,YAAU,EAAC5E,QAAQ;QAAA;UAAAoF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7BhG,OAAA;UAAAqF,QAAA,GAAI,YAAU,EAAC1E,QAAQ;QAAA;UAAAkF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNhG,OAAA;MAAKoF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BlF,IAAI,IAAIE,EAAE,IAAIc,gBAAgB,CAACmB,MAAM,GAAG,CAAC,iBACxCtC,OAAA,CAACb,YAAY;QACXiH,MAAM,EAAE,CAACjG,IAAI,CAACiD,GAAG,EAAEjD,IAAI,CAACoD,GAAG,CAAE;QAC7B8C,IAAI,EAAE,EAAG;QACTf,KAAK,EAAE;UAAEgB,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,OAAO;UAAEC,YAAY,EAAE,KAAK;UAAEC,SAAS,EAAE;QAAgC,CAAE;QAAApB,QAAA,gBAE3GrF,OAAA,CAACZ,SAAS;UACRsH,GAAG,EAAC,oDAAoD;UACxDC,WAAW,EAAC;QAAyF;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG,CAAC,eACFhG,OAAA,CAACX,MAAM;UAAC8D,QAAQ,EAAE,CAAChD,IAAI,CAACiD,GAAG,EAAEjD,IAAI,CAACoD,GAAG,CAAE;UAAA8B,QAAA,eACrCrF,OAAA,CAACV,KAAK;YAAA+F,QAAA,GAAC,SAAO,EAAClF,IAAI;UAAA;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACThG,OAAA,CAACX,MAAM;UAAC8D,QAAQ,EAAE,CAAC9C,EAAE,CAAC+C,GAAG,EAAE/C,EAAE,CAACkD,GAAG,CAAE;UAAA8B,QAAA,eACjCrF,OAAA,CAACV,KAAK;YAAA+F,QAAA,GAAC,OAAK,EAAChF,EAAE;UAAA;YAAAwF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACThG,OAAA,CAACT,QAAQ;UAACqH,SAAS,EAAEzF,gBAAiB;UAAC0F,KAAK,EAAC,MAAM;UAACC,MAAM,EAAE;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IACf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNhG,OAAA;MAASoF,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACvCrF,OAAA;QAAAqF,QAAA,EAAI;MAAoB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BhG,OAAA;QAAKoF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BP,mBAAmB,CAAChC,GAAG,CAAC,CAACiE,WAAW,EAAEd,KAAK,kBAC1CjG,OAAA;UAAiBoF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC3CrF,OAAA;YAAKgH,GAAG,EAAED,WAAW,CAAC9B,KAAM;YAACgC,GAAG,EAAEF,WAAW,CAAChC;UAAK;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtDhG,OAAA;YAAKoF,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BrF,OAAA;cAAAqF,QAAA,EAAK0B,WAAW,CAAChC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BhG,OAAA;cAAAqF,QAAA,EAAI0B,WAAW,CAAC5E;YAAQ;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BhG,OAAA;cAAAqF,QAAA,EAAI0B,WAAW,CAAC/B;YAAM;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA,GANEC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGVhG,OAAA;MAASoF,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACjCrF,OAAA;QAAAqF,QAAA,EAAI;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhG,OAAA;QAAKoF,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBH,aAAa,CAACpC,GAAG,CAAC,CAACoE,KAAK,EAAEjB,KAAK,kBAC9BjG,OAAA;UAAiBoF,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACrCrF,OAAA;YAAKgH,GAAG,EAAEE,KAAK,CAACjC,KAAM;YAACgC,GAAG,EAAEC,KAAK,CAACnC;UAAK;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1ChG,OAAA;YAAKoF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBrF,OAAA;cAAAqF,QAAA,EAAK6B,KAAK,CAACnC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBhG,OAAA;cAAAqF,QAAA,EAAI6B,KAAK,CAAC/E;YAAQ;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBhG,OAAA;cAAAqF,QAAA,EAAI6B,KAAK,CAAC/B;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA,GANEC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC9F,EAAA,CAxSID,IAAI;AAAAkH,EAAA,GAAJlH,IAAI;AA0SV,eAAeA,IAAI;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}