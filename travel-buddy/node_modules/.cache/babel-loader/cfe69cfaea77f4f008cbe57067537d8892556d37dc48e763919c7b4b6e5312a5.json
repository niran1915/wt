{"ast":null,"code":"var _jsxFileName = \"G:\\\\travel-buddy\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>â‡„</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\n/* global google */\nimport React, { useState, useEffect } from 'react';\n\n// Importing necessary components from Google Maps API\nimport { GoogleMap, LoadScript, DirectionsRenderer } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('DRIVING');\n  const [loadingFromSuggestions, setLoadingFromSuggestions] = useState(false);\n  const [loadingToSuggestions, setLoadingToSuggestions] = useState(false);\n  const googleMapsApiKey = 'YOUR_GOOGLE_MAPS_API_KEY';\n\n  // Debounced function to fetch suggestions\n  const fetchSuggestions = async (query, isFromLocation = true) => {\n    if (query.length > 2) {\n      const url = `https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${query}&key=${googleMapsApiKey}`;\n      const loadingSetter = isFromLocation ? setLoadingFromSuggestions : setLoadingToSuggestions;\n      const setter = isFromLocation ? setFromSuggestions : setToSuggestions;\n      loadingSetter(true);\n      try {\n        const response = await axios.get(url);\n        setter(response.data.predictions);\n      } catch (error) {\n        console.error(\"Error fetching suggestions:\", error);\n      } finally {\n        loadingSetter(false);\n      }\n    }\n  };\n  useEffect(() => {\n    if (from.length > 2) {\n      fetchSuggestions(from, true);\n    }\n  }, [from]);\n  useEffect(() => {\n    if (to.length > 2) {\n      fetchSuggestions(to, false);\n    }\n  }, [to]);\n  const handleSuggestionClick = (suggestion, isFromLocation = true) => {\n    if (isFromLocation) {\n      setFrom(suggestion.description);\n      setFromSuggestions([]);\n    } else {\n      setTo(suggestion.description);\n      setToSuggestions([]);\n    }\n  };\n  const calculateRoute = async () => {\n    if (from && to) {\n      setRoute(null);\n      setDistance('');\n      setDuration('');\n      const directionsService = new google.maps.DirectionsService();\n      const request = {\n        origin: from,\n        destination: to,\n        travelMode: google.maps.TravelMode[travelMode]\n      };\n      directionsService.route(request, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          setRoute(result);\n          const routeData = result.routes[0].legs[0];\n          setDistance(routeData.distance.text);\n          setDuration(routeData.duration.text);\n        } else {\n          console.error(\"Error calculating route:\", status);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: from,\n          placeholder: \"Enter starting location\",\n          onChange: e => setFrom(e.target.value),\n          onFocus: () => fetchSuggestions(from, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), loadingFromSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 38\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionClick(suggestion, true),\n            children: suggestion.description\n          }, suggestion.place_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: to,\n          placeholder: \"Enter destination\",\n          onChange: e => setTo(e.target.value),\n          onFocus: () => fetchSuggestions(to, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), loadingToSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 36\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionClick(suggestion, false),\n            children: suggestion.description\n          }, suggestion.place_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-mode-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"travel-mode\",\n          children: \"Travel Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"travel-mode\",\n          value: travelMode,\n          onChange: e => setTravelMode(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DRIVING\",\n            children: \"Driving\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BICYCLING\",\n            children: \"Bicycling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"WALKING\",\n            children: \"Walking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        children: \"Calculate Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 14\n        }, this), \" \", distance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 14\n        }, this), \" \", duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: googleMapsApiKey,\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: {\n            width: '100%',\n            height: '100%',\n            borderRadius: '15px'\n          },\n          center: {\n            lat: 37.7749,\n            // Default to San Francisco lat/lng if no route\n            lng: -122.4194\n          },\n          zoom: 14,\n          children: route && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n            directions: route\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"HDMl05BanFdBU7V6TzPQiadIuFo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","DirectionsRenderer","axios","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","loadingFromSuggestions","setLoadingFromSuggestions","loadingToSuggestions","setLoadingToSuggestions","googleMapsApiKey","fetchSuggestions","query","isFromLocation","length","url","loadingSetter","setter","response","get","data","predictions","error","console","handleSuggestionClick","suggestion","description","calculateRoute","directionsService","google","maps","DirectionsService","request","origin","destination","TravelMode","result","status","DirectionsStatus","OK","routeData","routes","legs","text","className","children","type","value","placeholder","onChange","e","target","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","place_id","htmlFor","id","mapContainerStyle","width","height","borderRadius","center","lat","lng","zoom","directions","_c","$RefreshReg$"],"sources":["G:/travel-buddy/src/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>â‡„</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\n/* global google */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Importing necessary components from Google Maps API\r\nimport { GoogleMap, LoadScript, DirectionsRenderer } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING');\r\n\r\n  const [loadingFromSuggestions, setLoadingFromSuggestions] = useState(false);\r\n  const [loadingToSuggestions, setLoadingToSuggestions] = useState(false);\r\n\r\n  const googleMapsApiKey = 'YOUR_GOOGLE_MAPS_API_KEY';\r\n\r\n  // Debounced function to fetch suggestions\r\n  const fetchSuggestions = async (query, isFromLocation = true) => {\r\n    if (query.length > 2) {\r\n      const url = `https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${query}&key=${googleMapsApiKey}`;\r\n      const loadingSetter = isFromLocation ? setLoadingFromSuggestions : setLoadingToSuggestions;\r\n      const setter = isFromLocation ? setFromSuggestions : setToSuggestions;\r\n\r\n      loadingSetter(true);\r\n      try {\r\n        const response = await axios.get(url);\r\n        setter(response.data.predictions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching suggestions:\", error);\r\n      } finally {\r\n        loadingSetter(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (from.length > 2) {\r\n      fetchSuggestions(from, true);\r\n    }\r\n  }, [from]);\r\n\r\n  useEffect(() => {\r\n    if (to.length > 2) {\r\n      fetchSuggestions(to, false);\r\n    }\r\n  }, [to]);\r\n\r\n  const handleSuggestionClick = (suggestion, isFromLocation = true) => {\r\n    if (isFromLocation) {\r\n      setFrom(suggestion.description);\r\n      setFromSuggestions([]);\r\n    } else {\r\n      setTo(suggestion.description);\r\n      setToSuggestions([]);\r\n    }\r\n  };\r\n\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      setRoute(null);\r\n      setDistance('');\r\n      setDuration('');\r\n\r\n      const directionsService = new google.maps.DirectionsService();\r\n      const request = {\r\n        origin: from,\r\n        destination: to,\r\n        travelMode: google.maps.TravelMode[travelMode],\r\n      };\r\n\r\n      directionsService.route(request, (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          setRoute(result);\r\n          const routeData = result.routes[0].legs[0];\r\n          setDistance(routeData.distance.text);\r\n          setDuration(routeData.duration.text);\r\n        } else {\r\n          console.error(\"Error calculating route:\", status);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"location-select\">\r\n        {/* From Location Input */}\r\n        <div className=\"location-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={from}\r\n            placeholder=\"Enter starting location\"\r\n            onChange={(e) => setFrom(e.target.value)}\r\n            onFocus={() => fetchSuggestions(from, true)}\r\n          />\r\n          {loadingFromSuggestions && <div className=\"loader\">Loading...</div>}\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion) => (\r\n                <li\r\n                  key={suggestion.place_id}\r\n                  onClick={() => handleSuggestionClick(suggestion, true)}\r\n                >\r\n                  {suggestion.description}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* To Location Input */}\r\n        <div className=\"location-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={to}\r\n            placeholder=\"Enter destination\"\r\n            onChange={(e) => setTo(e.target.value)}\r\n            onFocus={() => fetchSuggestions(to, false)}\r\n          />\r\n          {loadingToSuggestions && <div className=\"loader\">Loading...</div>}\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion) => (\r\n                <li\r\n                  key={suggestion.place_id}\r\n                  onClick={() => handleSuggestionClick(suggestion, false)}\r\n                >\r\n                  {suggestion.description}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Travel Mode Selector */}\r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travel-mode\">Travel Mode:</label>\r\n          <select\r\n            id=\"travel-mode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button onClick={calculateRoute}>Calculate Route</button>\r\n      </div>\r\n\r\n      {/* Route Information */}\r\n      {distance && duration && (\r\n        <div className=\"route-info\">\r\n          <p><strong>Distance:</strong> {distance}</p>\r\n          <p><strong>Duration:</strong> {duration}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Google Map */}\r\n      <div className=\"map-container\">\r\n        <LoadScript googleMapsApiKey={googleMapsApiKey}>\r\n          <GoogleMap\r\n            mapContainerStyle={{\r\n              width: '100%',\r\n              height: '100%',\r\n              borderRadius: '15px',\r\n            }}\r\n            center={{\r\n              lat: 37.7749,  // Default to San Francisco lat/lng if no route\r\n              lng: -122.4194,\r\n            }}\r\n            zoom={14}\r\n          >\r\n            {route && <DirectionsRenderer directions={route} />}\r\n          </GoogleMap>\r\n        </LoadScript>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}