{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios'; // Import axios to make HTTP requests\nimport logoImage from '../images/logo-modified.png'; // Assuming this is your logo\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    if (email && password) {\n      try {\n        // Send login request to the backend\n        const response = await axios.post('http://localhost:5000/api/login', {\n          email,\n          password\n        });\n\n        // If login is successful, navigate to the home page\n        console.log('Login successful:', response.data);\n        const {\n          userProfile\n        } = response.data;\n\n        // Store user profile (for example, in local storage or state)\n        localStorage.setItem('userProfile', JSON.stringify(userProfile));\n\n        // Navigate to home page or dashboard\n        navigate('/home');\n      } catch (error) {\n        var _error$response, _error$response2, _error$response2$data;\n        // Handle error if credentials are invalid\n        console.error('Login failed:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Invalid email or password');\n      }\n    } else {\n      alert('Please enter both email and password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\",\n        className: \"auth-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TRAVELBUDDY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New here? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n/* import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; // Ensure correct path\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    if (email && password) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Login successful');\r\n          localStorage.setItem('token', result.token); \r\n          navigate('/home'); \r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error logging in, please try again.');\r\n      }\r\n    } else {\r\n      alert('Please enter valid email and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Login</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n      <p>New here? <Link to=\"/signup\">Sign Up</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n */\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","logoImage","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleLogin","response","post","console","log","data","userProfile","localStorage","setItem","JSON","stringify","error","_error$response","_error$response2","_error$response2$data","alert","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';  // Import axios to make HTTP requests\r\nimport logoImage from '../images/logo-modified.png';  // Assuming this is your logo\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    if (email && password) {\r\n      try {\r\n        // Send login request to the backend\r\n        const response = await axios.post('http://localhost:5000/api/login', { email, password });\r\n\r\n        // If login is successful, navigate to the home page\r\n        console.log('Login successful:', response.data);\r\n        const { userProfile } = response.data;\r\n\r\n        // Store user profile (for example, in local storage or state)\r\n        localStorage.setItem('userProfile', JSON.stringify(userProfile));\r\n\r\n        // Navigate to home page or dashboard\r\n        navigate('/home');\r\n      } catch (error) {\r\n        // Handle error if credentials are invalid\r\n        console.error('Login failed:', error.response?.data);\r\n        alert(error.response?.data?.message || 'Invalid email or password');\r\n      }\r\n    } else {\r\n      alert('Please enter both email and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Login</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n      <p>New here? <Link to=\"/signup\">Sign Up</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n/* import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; // Ensure correct path\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    if (email && password) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Login successful');\r\n          localStorage.setItem('token', result.token); \r\n          navigate('/home'); \r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error logging in, please try again.');\r\n      }\r\n    } else {\r\n      alert('Please enter valid email and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Login</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n      <p>New here? <Link to=\"/signup\">Sign Up</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}