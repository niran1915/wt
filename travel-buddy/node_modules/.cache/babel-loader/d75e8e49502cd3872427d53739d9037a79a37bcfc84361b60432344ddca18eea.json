{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png';\r\nimport './signup.css';\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = () => {\r\n    if (password === confirmPassword) {\r\n      navigate('/login'); \r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup; */\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport logoImage from '../images/logo-modified.png'; // Ensure correct path\nimport './signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignup = async () => {\n    if (password === confirmPassword) {\n      try {\n        const response = await fetch('http://localhost:5000/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            phone,\n            password\n          })\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert('Sign up successful! Please login.');\n          navigate('/login'); // Redirect to login after signup\n        } else {\n          alert(result.message);\n        }\n      } catch (error) {\n        alert('Error signing up, please try again.');\n      }\n    } else {\n      alert('Passwords do not match');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\",\n        className: \"auth-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TRAVELBUDDY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"qnafmNRslBYQTLlsJyLS+Gt9UOU=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","logoImage","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleSignup","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Signup.js"],"sourcesContent":["/* import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png';\r\nimport './signup.css';\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = () => {\r\n    if (password === confirmPassword) {\r\n      navigate('/login'); \r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup; */\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; // Ensure correct path\r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/signup', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, phone, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Sign up successful! Please login.');\r\n          navigate('/login'); // Redirect to login after signup\r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error signing up, please try again.');\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}