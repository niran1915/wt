{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport logoImage from '../images/logo-modified.png';\nimport './signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [userProfile, setUserProfile] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const isValidPhone = phone => /^\\d{10}$/.test(phone);\n\n  // Handle signup (POST)\n  const handleSignup = async () => {\n    if (!isValidPhone(phone)) {\n      alert('Please enter a valid 10-digit phone number');\n      return;\n    }\n    if (password === confirmPassword) {\n      try {\n        // Send signup request to the backend\n        const response = await axios.post('http://localhost:5000/api/signup', {\n          email,\n          phone,\n          password\n        });\n        console.log('Signup successful:', response.data);\n        navigate('/login'); // Redirect to login page after successful signup\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred during signup');\n      }\n    } else {\n      alert('Passwords do not match');\n    }\n  };\n\n  // Fetch user profile (GET)\n  const fetchUserProfile = async () => {\n    const storedProfile = localStorage.getItem('userProfile');\n    if (storedProfile) {\n      setUserProfile(JSON.parse(storedProfile)); // Set user profile from local storage\n    } else {\n      alert('No user profile found. Please log in again.');\n    }\n  };\n\n  // Handle update profile (PUT)\n  const handleProfileUpdate = async updatedData => {\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\n    if (storedProfile) {\n      try {\n        const response = await axios.put(`http://localhost:5000/api/user/${storedProfile.email}`, updatedData);\n        setUserProfile(response.data.updatedProfile);\n        localStorage.setItem('userProfile', JSON.stringify(response.data.updatedProfile));\n        alert('Profile updated successfully');\n      } catch (error) {\n        alert('Error updating profile');\n      }\n    }\n  };\n\n  // Handle account deletion (DELETE)\n  const handleAccountDeletion = async () => {\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\n    if (storedProfile) {\n      try {\n        const response = await axios.delete(`http://localhost:5000/api/user/${storedProfile.email}`);\n        localStorage.removeItem('userProfile'); // Clear local storage\n        setUserProfile(null);\n        alert('Account deleted successfully');\n        navigate('/signup'); // Redirect to signup page\n      } catch (error) {\n        alert('Error deleting account');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\",\n        className: \"auth-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TRAVELBUDDY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUserProfile,\n      children: \"Fetch Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), userProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Welcome, \", userProfile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userProfile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", userProfile.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleProfileUpdate({\n          name: 'Updated Name'\n        }),\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAccountDeletion,\n        children: \"Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"Zz9prq7luzW4cAwIjC0RZKo976I=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\n\n/* import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; \r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/signup', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, phone, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Sign up successful! Please login.');\r\n          navigate('/login'); \r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error signing up, please try again.');\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup; */\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","axios","logoImage","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","userProfile","setUserProfile","error","setError","navigate","isValidPhone","test","handleSignup","alert","response","post","console","log","data","_error$response","_error$response$data","message","fetchUserProfile","storedProfile","localStorage","getItem","JSON","parse","handleProfileUpdate","updatedData","put","updatedProfile","setItem","stringify","handleAccountDeletion","delete","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","name","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport logoImage from '../images/logo-modified.png';\r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const isValidPhone = (phone) => /^\\d{10}$/.test(phone);\r\n\r\n  // Handle signup (POST)\r\n  const handleSignup = async () => {\r\n    if (!isValidPhone(phone)) {\r\n      alert('Please enter a valid 10-digit phone number');\r\n      return;\r\n    }\r\n\r\n    if (password === confirmPassword) {\r\n      try {\r\n        // Send signup request to the backend\r\n        const response = await axios.post('http://localhost:5000/api/signup', { email, phone, password });\r\n        console.log('Signup successful:', response.data);\r\n        navigate('/login'); // Redirect to login page after successful signup\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || 'An error occurred during signup');\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  // Fetch user profile (GET)\r\n  const fetchUserProfile = async () => {\r\n    const storedProfile = localStorage.getItem('userProfile');\r\n    if (storedProfile) {\r\n      setUserProfile(JSON.parse(storedProfile)); // Set user profile from local storage\r\n    } else {\r\n      alert('No user profile found. Please log in again.');\r\n    }\r\n  };\r\n\r\n  // Handle update profile (PUT)\r\n  const handleProfileUpdate = async (updatedData) => {\r\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n    if (storedProfile) {\r\n      try {\r\n        const response = await axios.put(`http://localhost:5000/api/user/${storedProfile.email}`, updatedData);\r\n        setUserProfile(response.data.updatedProfile);\r\n        localStorage.setItem('userProfile', JSON.stringify(response.data.updatedProfile));\r\n        alert('Profile updated successfully');\r\n      } catch (error) {\r\n        alert('Error updating profile');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle account deletion (DELETE)\r\n  const handleAccountDeletion = async () => {\r\n    const storedProfile = JSON.parse(localStorage.getItem('userProfile'));\r\n    if (storedProfile) {\r\n      try {\r\n        const response = await axios.delete(`http://localhost:5000/api/user/${storedProfile.email}`);\r\n        localStorage.removeItem('userProfile'); // Clear local storage\r\n        setUserProfile(null);\r\n        alert('Account deleted successfully');\r\n        navigate('/signup'); // Redirect to signup page\r\n      } catch (error) {\r\n        alert('Error deleting account');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone Number\"\r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <button onClick={fetchUserProfile}>Fetch Profile</button>\r\n\r\n      {/* Display user profile if logged in */}\r\n      {userProfile && (\r\n        <div>\r\n          <h3>Welcome, {userProfile.name}</h3>\r\n          <p>Email: {userProfile.email}</p>\r\n          <p>Phone: {userProfile.phone}</p>\r\n          <button onClick={() => handleProfileUpdate({ name: 'Updated Name' })}>Update Profile</button>\r\n          <button onClick={handleAccountDeletion}>Delete Account</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n/* import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImage from '../images/logo-modified.png'; \r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async () => {\r\n    if (password === confirmPassword) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/signup', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email, phone, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('Sign up successful! Please login.');\r\n          navigate('/login'); \r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (error) {\r\n        alert('Error signing up, please try again.');\r\n      }\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"auth-header\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>TRAVELBUDDY</h1>\r\n      </div>\r\n      <h2>Sign Up</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleSignup}>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup; */\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}