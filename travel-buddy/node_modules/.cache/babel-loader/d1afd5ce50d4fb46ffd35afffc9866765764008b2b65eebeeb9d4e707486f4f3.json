{"ast":null,"code":"var _jsxFileName = \"F:\\\\travel-buddy\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\nimport lalbaghImg from '../images/lalbagh.jpg';\nimport cubbonParkImg from '../images/cubbon-park.jpg';\nimport concertImg from '../images/concert.jpg';\nimport marathonImg from '../images/marathon.jpg';\nimport foodFestivalImg from '../images/food-festival.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('driving'); // Default travel mode\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const DISTANCEMATRIX_API_KEY = process.env.REACT_APP_DISTANCEMATRIX_API_KEY; // API key from .env\n\n  // Debounce function for handling input change delay\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  // Fetch place suggestions from MongoDB via the backend API\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      const response = await axios.get(`/api/suggestions?query=${encodeURIComponent(location)}`);\n      // Format the response to match the expected format\n      setSuggestions(response.data.map(place => ({\n        displayName: place.name,\n        position: {\n          lat: place.coordinates.lat,\n          lng: place.coordinates.lng\n        }\n      })));\n    } catch (error) {\n      console.error('Error fetching places:', error);\n      setSuggestions([]);\n    }\n  };\n\n  // Handle place change with debounce\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n\n  // Select a suggestion and update the input field\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\n    setter(suggestion.position); // Set the place position\n    inputRef.current.value = suggestion.displayName; // Set the display name in the input\n    setSuggestions([]); // Clear the suggestions\n  };\n\n  // Function to call DistanceMatrix.ai API and calculate distance/time\n  const calculateRoute = async () => {\n    if (from && to) {\n      setRoute(null); // Reset previous route\n      setDistance('');\n      setDuration('');\n      const requestBody = {\n        key: DISTANCEMATRIX_API_KEY,\n        // API Key\n        origins: [`${from.lat},${from.lng}`],\n        destinations: [`${to.lat},${to.lng}`],\n        mode: travelMode // Choose travel mode (e.g., 'driving', 'walking', 'bicycling')\n      };\n      try {\n        const response = await axios.post('https://api.distancematrix.ai/maps/api/distancematrix/json', requestBody);\n        if (response.data.status === 'OK') {\n          const element = response.data.rows[0].elements[0];\n          if (element.status === 'OK') {\n            setDistance(element.distance.text); // The distance in human-readable format (e.g., \"5.5 km\")\n            setDuration(element.duration.text); // The estimated duration (e.g., \"12 mins\")\n          } else {\n            alert('Error calculating route, try again.');\n          }\n        }\n      } catch (error) {\n        console.error('Error calculating route:', error);\n        alert('Failed to calculate route. Please try again.');\n      }\n    } else {\n      alert(\"Please select both the start and end locations.\");\n    }\n  };\n\n  // Swap the start and end locations\n  const swapLocations = () => {\n    const temp = from;\n    setFrom(to);\n    setTo(temp);\n    setFromSuggestions([]); // Clear the suggestions when swapping\n    setToSuggestions([]);\n  };\n\n  // Bangalore specific popular destinations\n  const popularDestinations = [{\n    name: \"ISKCON Temple\",\n    location: \"Rajajinagar, Bangalore\",\n    rating: \"4.2 ⭐\",\n    image: iskconTempleImg\n  }, {\n    name: \"Lalbagh Botanical Garden\",\n    location: \"Mavalli, Bangalore\",\n    rating: \"4.7 ⭐\",\n    image: lalbaghImg\n  }, {\n    name: \"Cubbon Park\",\n    location: \"Bangalore\",\n    rating: \"4.5 ⭐\",\n    image: cubbonParkImg\n  }];\n\n  // Bangalore specific popular events\n  const popularEvents = [{\n    name: \"Live Concert by XYZ Band\",\n    location: \"ABC Arena, Bangalore\",\n    date: \"12th December 2024\",\n    image: concertImg\n  }, {\n    name: \"City Marathon 2024\",\n    location: \"Downtown Park, Bangalore\",\n    date: \"5th January 2024\",\n    image: marathonImg\n  }, {\n    name: \"Annual Food Festival\",\n    location: \"City Square, Bangalore\",\n    date: \"20th November 2024\",\n    image: foodFestivalImg\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: swapLocations,\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => selectSuggestion(suggestion, setTo, toRef, setToSuggestions),\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-mode-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"driving\",\n            checked: travelMode === 'driving',\n            onChange: () => setTravelMode('driving')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), \"Driving\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"walking\",\n            checked: travelMode === 'walking',\n            onChange: () => setTravelMode('walking')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), \"Walking\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"bicycling\",\n            checked: travelMode === 'bicycling',\n            onChange: () => setTravelMode('bicycling')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), \"Bicycling\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-details\",\n      children: distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Destinations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-destinations\",\n        children: popularDestinations.map((destination, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: destination.image,\n            alt: destination.name,\n            className: \"destination-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"destination-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: destination.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: destination.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rating\",\n              children: destination.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/destinations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow-btn\",\n          children: \"See All Destinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popular-events\",\n        children: popularEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.image,\n            alt: event.name,\n            className: \"event-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow-btn\",\n          children: \"See All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"nEtdqw9aP7Yhq5RhiCObaxn9BZk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","axios","Link","iskconTempleImg","lalbaghImg","cubbonParkImg","concertImg","marathonImg","foodFestivalImg","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","fromRef","toRef","DISTANCEMATRIX_API_KEY","process","env","REACT_APP_DISTANCEMATRIX_API_KEY","debounce","func","delay","timeout","args","clearTimeout","setTimeout","fetchSuggestions","location","setter","setSuggestions","length","response","get","encodeURIComponent","data","map","place","displayName","name","position","lat","coordinates","lng","error","console","handlePlaceChange","selectSuggestion","suggestion","inputRef","current","value","calculateRoute","requestBody","key","origins","destinations","mode","post","status","element","rows","elements","text","alert","swapLocations","temp","popularDestinations","rating","image","popularEvents","date","className","children","style","type","placeholder","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","checked","destination","src","alt","event","_c","$RefreshReg$"],"sources":["F:/travel-buddy/src/components/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>⇄</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nimport iskconTempleImg from '../images/iskcon-temple.jpg';\r\nimport lalbaghImg from '../images/lalbagh.jpg';\r\nimport cubbonParkImg from '../images/cubbon-park.jpg';\r\nimport concertImg from '../images/concert.jpg';\r\nimport marathonImg from '../images/marathon.jpg';\r\nimport foodFestivalImg from '../images/food-festival.jpg';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('driving');  // Default travel mode\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const DISTANCEMATRIX_API_KEY = process.env.REACT_APP_DISTANCEMATRIX_API_KEY;  // API key from .env\r\n\r\n  // Debounce function for handling input change delay\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  // Fetch place suggestions from MongoDB via the backend API\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`/api/suggestions?query=${encodeURIComponent(location)}`);\r\n      // Format the response to match the expected format\r\n      setSuggestions(response.data.map((place) => ({\r\n        displayName: place.name,\r\n        position: { lat: place.coordinates.lat, lng: place.coordinates.lng },\r\n      })));\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  // Handle place change with debounce\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  // Select a suggestion and update the input field\r\n  const selectSuggestion = (suggestion, setter, inputRef, setSuggestions) => {\r\n    setter(suggestion.position); // Set the place position\r\n    inputRef.current.value = suggestion.displayName; // Set the display name in the input\r\n    setSuggestions([]); // Clear the suggestions\r\n  };\r\n\r\n  // Function to call DistanceMatrix.ai API and calculate distance/time\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      setRoute(null);  // Reset previous route\r\n      setDistance('');\r\n      setDuration('');\r\n\r\n      const requestBody = {\r\n        key: DISTANCEMATRIX_API_KEY,  // API Key\r\n        origins: [`${from.lat},${from.lng}`],\r\n        destinations: [`${to.lat},${to.lng}`],\r\n        mode: travelMode,  // Choose travel mode (e.g., 'driving', 'walking', 'bicycling')\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('https://api.distancematrix.ai/maps/api/distancematrix/json', requestBody);\r\n        if (response.data.status === 'OK') {\r\n          const element = response.data.rows[0].elements[0];\r\n          if (element.status === 'OK') {\r\n            setDistance(element.distance.text);  // The distance in human-readable format (e.g., \"5.5 km\")\r\n            setDuration(element.duration.text);  // The estimated duration (e.g., \"12 mins\")\r\n          } else {\r\n            alert('Error calculating route, try again.');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error calculating route:', error);\r\n        alert('Failed to calculate route. Please try again.');\r\n      }\r\n    } else {\r\n      alert(\"Please select both the start and end locations.\");\r\n    }\r\n  };\r\n\r\n  // Swap the start and end locations\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n    setFromSuggestions([]); // Clear the suggestions when swapping\r\n    setToSuggestions([]);\r\n  };\r\n\r\n  // Bangalore specific popular destinations\r\n  const popularDestinations = [\r\n    {\r\n      name: \"ISKCON Temple\",\r\n      location: \"Rajajinagar, Bangalore\",\r\n      rating: \"4.2 ⭐\",\r\n      image: iskconTempleImg\r\n    },\r\n    {\r\n      name: \"Lalbagh Botanical Garden\",\r\n      location: \"Mavalli, Bangalore\",\r\n      rating: \"4.7 ⭐\",\r\n      image: lalbaghImg\r\n    },\r\n    {\r\n      name: \"Cubbon Park\",\r\n      location: \"Bangalore\",\r\n      rating: \"4.5 ⭐\",\r\n      image: cubbonParkImg\r\n    },\r\n  ];\r\n\r\n  // Bangalore specific popular events\r\n  const popularEvents = [\r\n    {\r\n      name: \"Live Concert by XYZ Band\",\r\n      location: \"ABC Arena, Bangalore\",\r\n      date: \"12th December 2024\",\r\n      image: concertImg\r\n    },\r\n    {\r\n      name: \"City Marathon 2024\",\r\n      location: \"Downtown Park, Bangalore\",\r\n      date: \"5th January 2024\",\r\n      image: marathonImg\r\n    },\r\n    {\r\n      name: \"Annual Food Festival\",\r\n      location: \"City Square, Bangalore\",\r\n      date: \"20th November 2024\",\r\n      image: foodFestivalImg\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Location Selection Section */}\r\n      <div className=\"location-select\">\r\n        {/* From Location Input */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setFrom, fromRef, setFromSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Swap Button */}\r\n        <button onClick={swapLocations}>⇄</button>\r\n\r\n        {/* To Location Input */}\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => selectSuggestion(suggestion, setTo, toRef, setToSuggestions)}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Travel Mode Selector */}\r\n        <div className=\"travel-mode-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"driving\"\r\n              checked={travelMode === 'driving'}\r\n              onChange={() => setTravelMode('driving')}\r\n            />\r\n            Driving\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"walking\"\r\n              checked={travelMode === 'walking'}\r\n              onChange={() => setTravelMode('walking')}\r\n            />\r\n            Walking\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"bicycling\"\r\n              checked={travelMode === 'bicycling'}\r\n              onChange={() => setTravelMode('bicycling')}\r\n            />\r\n            Bicycling\r\n          </label>\r\n        </div>\r\n\r\n        {/* Get Route Button */}\r\n        <button onClick={calculateRoute}>Get Route</button>\r\n      </div>\r\n\r\n      {/* Distance and Duration */}\r\n      <div className=\"route-details\">\r\n        {distance && duration && (\r\n          <div>\r\n            <h3>Distance: {distance}</h3>\r\n            <h3>Duration: {duration}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Popular Destinations */}\r\n      <div className=\"popular-sections\">\r\n        <h2>Popular Destinations</h2>\r\n        <div className=\"popular-destinations\">\r\n          {popularDestinations.map((destination, index) => (\r\n            <div key={index} className=\"destination\">\r\n              <img src={destination.image} alt={destination.name} className=\"destination-image\" />\r\n              <div className=\"destination-info\">\r\n                <h3>{destination.name}</h3>\r\n                <p>{destination.location}</p>\r\n                <p className=\"rating\">{destination.rating}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Link to=\"/destinations\">\r\n          <button className=\"scroll-arrow-btn\">See All Destinations</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Popular Events */}\r\n      <div className=\"popular-sections\">\r\n        <h2>Popular Events</h2>\r\n        <div className=\"popular-events\">\r\n          {popularEvents.map((event, index) => (\r\n            <div key={index} className=\"event\">\r\n              <img src={event.image} alt={event.name} className=\"event-image\" />\r\n              <div className=\"event-info\">\r\n                <h3>{event.name}</h3>\r\n                <p>{event.location}</p>\r\n                <p>{event.date}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Link to=\"/events\">\r\n          <button className=\"scroll-arrow-btn\">See All Events</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}