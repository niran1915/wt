{"ast":null,"code":"var _jsxFileName = \"G:\\\\travel-buddy\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>â‡„</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline } from 'react-leaflet';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [from, setFrom] = useState(null);\n  const [to, setTo] = useState(null);\n  const [route, setRoute] = useState(null);\n  const [distance, setDistance] = useState('');\n  const [duration, setDuration] = useState('');\n  const [travelMode, setTravelMode] = useState('driving-car'); // Default travel mode\n  const [fromSuggestions, setFromSuggestions] = useState([]);\n  const [toSuggestions, setToSuggestions] = useState([]);\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n  const mapRef = useRef();\n\n  // Debounce function to limit API calls\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\n    if (location.length === 0) {\n      setSuggestions([]);\n      return;\n    }\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${location}`;\n    try {\n      const response = await axios.get(url);\n      setSuggestions(response.data.map(place => ({\n        displayName: place.display_name,\n        position: {\n          lat: parseFloat(place.lat),\n          lng: parseFloat(place.lon)\n        }\n      })));\n    } catch (error) {\n      console.error(\"Error fetching places:\", error);\n    }\n  };\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\n    fetchSuggestions(location, setter, setSuggestions);\n  }, 300);\n  const calculateRoute = async () => {\n    if (from && to) {\n      const url = `https://api.openrouteservice.org/v2/directions/${travelMode}`;\n      try {\n        const response = await axios.post(url, {\n          coordinates: [[from.lng, from.lat], [to.lng, to.lat]]\n        }, {\n          headers: {\n            'Authorization': 'YOUR_API_KEY',\n            // Replace with your actual API key\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.data && response.data.routes.length > 0) {\n          const routeData = response.data.routes[0];\n          const geometry = routeData.geometry.coordinates.map(coord => ({\n            lat: coord[1],\n            lng: coord[0]\n          }));\n          setRoute(geometry);\n          setDistance((routeData.summary.distance / 1000).toFixed(2) + ' km');\n          setDuration(Math.round(routeData.summary.duration / 60) + ' mins');\n\n          // Center map on the route and the markers\n          const map = mapRef.current;\n          if (map) {\n            const bounds = L.latLngBounds([from, to, ...geometry]);\n            map.fitBounds(bounds);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error calculating route:\", error);\n      }\n    }\n  };\n  const swapLocations = () => {\n    const temp = from;\n    setFrom(to);\n    setTo(temp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From\",\n          ref: fromRef,\n          onChange: e => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), fromSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: fromSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setFrom(suggestion.position);\n              fromRef.current.value = suggestion.displayName;\n              setFromSuggestions([]);\n            },\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: swapLocations,\n        children: \"\\u21C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To\",\n          ref: toRef,\n          onChange: e => handlePlaceChange(e.target.value, setTo, setToSuggestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), toSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: toSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTo(suggestion.position);\n              toRef.current.value = suggestion.displayName;\n              setToSuggestions([]);\n            },\n            children: suggestion.displayName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateRoute,\n        children: \"Get Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"travel-mode-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"travelMode\",\n        children: \"Travel Mode: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"travelMode\",\n        value: travelMode,\n        onChange: e => setTravelMode(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"driving-car\",\n          children: \"Driving\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cycling-regular\",\n          children: \"Cycling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"foot-walking\",\n          children: \"Walking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: from || {\n        lat: 37.7749,\n        lng: -122.4194\n      },\n      zoom: 13,\n      ref: mapRef,\n      style: {\n        height: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), from && /*#__PURE__*/_jsxDEV(Marker, {\n        position: from,\n        icon: new L.Icon({\n          iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png',\n          iconSize: [25, 41]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 18\n      }, this), to && /*#__PURE__*/_jsxDEV(Marker, {\n        position: to,\n        icon: new L.Icon({\n          iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png',\n          iconSize: [25, 41]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 16\n      }, this), route && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-info\",\n      children: distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Distance: \", distance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Approximate Time: \", duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"8fznr3syffIo1YpQt/zPrrGlOz4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Polyline","axios","L","jsxDEV","_jsxDEV","Home","_s","from","setFrom","to","setTo","route","setRoute","distance","setDistance","duration","setDuration","travelMode","setTravelMode","fromSuggestions","setFromSuggestions","toSuggestions","setToSuggestions","fromRef","toRef","mapRef","debounce","func","delay","timeout","args","clearTimeout","setTimeout","fetchSuggestions","location","setter","setSuggestions","length","url","response","get","data","map","place","displayName","display_name","position","lat","parseFloat","lng","lon","error","console","handlePlaceChange","calculateRoute","post","coordinates","headers","routes","routeData","geometry","coord","summary","toFixed","Math","round","current","bounds","latLngBounds","fitBounds","swapLocations","temp","className","children","style","type","placeholder","ref","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","suggestion","index","onClick","htmlFor","id","center","zoom","height","width","icon","Icon","iconUrl","iconSize","positions","color","_c","$RefreshReg$"],"sources":["G:/travel-buddy/src/Home.js"],"sourcesContent":["/* import React, { useState, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\r\nimport './Home.css';\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('DRIVING'); \r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n\r\n  const handlePlaceChange = (autocomplete, setter) => {\r\n    const place = autocomplete.getPlace();\r\n    setter(place);\r\n  };\r\n\r\n  const calculateRoute = () => {\r\n    if (from && to) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      directionsService.route(\r\n        {\r\n          origin: from.geometry.location,\r\n          destination: to.geometry.location,\r\n          travelMode: window.google.maps.TravelMode[travelMode],\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n            setDistance(result.routes[0].legs[0].distance.text);\r\n            setDuration(result.routes[0].legs[0].duration.text);\r\n          } else {\r\n            console.error(\"Error fetching directions\", result);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\" libraries={libraries}>\r\n      <div className=\"home-container\">\r\n       \r\n        <div className=\"location-select\">\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (fromRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(fromRef.current, setFrom)}\r\n          >\r\n            <input type=\"text\" placeholder=\"From\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={swapLocations}>â‡„</button>\r\n\r\n          <Autocomplete\r\n            onLoad={(autocomplete) => (toRef.current = autocomplete)}\r\n            onPlaceChanged={() => handlePlaceChange(toRef.current, setTo)}\r\n          >\r\n            <input type=\"text\" placeholder=\"To\" />\r\n          </Autocomplete>\r\n          \r\n          <button onClick={calculateRoute}>Get Route</button>\r\n        </div>\r\n\r\n       \r\n        <div className=\"travel-mode-select\">\r\n          <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n          <select\r\n            id=\"travelMode\"\r\n            value={travelMode}\r\n            onChange={(e) => setTravelMode(e.target.value)}\r\n          >\r\n            <option value=\"DRIVING\">Driving</option>\r\n            <option value=\"WALKING\">Walking</option>\r\n            <option value=\"BICYCLING\">Bicycling</option>\r\n            <option value=\"TRANSIT\">Transit</option>\r\n          </select>\r\n        </div>\r\n\r\n       \r\n        <GoogleMap\r\n          center={{ lat: 37.7749, lng: -122.4194 }} // Default center\r\n          zoom={13}\r\n          mapContainerStyle={{ height: '400px', width: '100%' }}\r\n        >\r\n          {from && to && directions && (\r\n            <DirectionsRenderer directions={directions} />\r\n          )}\r\n        </GoogleMap>\r\n\r\n        \r\n        <div className=\"route-info\">\r\n          {distance && duration && (\r\n            <div>\r\n              <p>Distance: {distance}</p>\r\n              <p>Approximate Time: {duration}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Home;   */\r\n\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [route, setRoute] = useState(null);\r\n  const [distance, setDistance] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [travelMode, setTravelMode] = useState('driving-car'); // Default travel mode\r\n  const [fromSuggestions, setFromSuggestions] = useState([]);\r\n  const [toSuggestions, setToSuggestions] = useState([]);\r\n\r\n  const fromRef = useRef(null);\r\n  const toRef = useRef(null);\r\n  const mapRef = useRef();\r\n\r\n  // Debounce function to limit API calls\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        func(...args);\r\n      }, delay);\r\n    };\r\n  };\r\n\r\n  const fetchSuggestions = async (location, setter, setSuggestions) => {\r\n    if (location.length === 0) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${location}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      setSuggestions(response.data.map(place => ({\r\n        displayName: place.display_name,\r\n        position: { lat: parseFloat(place.lat), lng: parseFloat(place.lon) },\r\n      })));\r\n    } catch (error) {\r\n      console.error(\"Error fetching places:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePlaceChange = debounce((location, setter, setSuggestions) => {\r\n    fetchSuggestions(location, setter, setSuggestions);\r\n  }, 300);\r\n\r\n  const calculateRoute = async () => {\r\n    if (from && to) {\r\n      const url = `https://api.openrouteservice.org/v2/directions/${travelMode}`;\r\n      try {\r\n        const response = await axios.post(\r\n          url,\r\n          {\r\n            coordinates: [[from.lng, from.lat], [to.lng, to.lat]],\r\n          },\r\n          {\r\n            headers: {\r\n              'Authorization': 'YOUR_API_KEY', // Replace with your actual API key\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        );\r\n        if (response.data && response.data.routes.length > 0) {\r\n          const routeData = response.data.routes[0];\r\n          const geometry = routeData.geometry.coordinates.map(coord => ({ lat: coord[1], lng: coord[0] }));\r\n          setRoute(geometry);\r\n          setDistance((routeData.summary.distance / 1000).toFixed(2) + ' km');\r\n          setDuration(Math.round(routeData.summary.duration / 60) + ' mins');\r\n\r\n          // Center map on the route and the markers\r\n          const map = mapRef.current;\r\n          if (map) {\r\n            const bounds = L.latLngBounds([from, to, ...geometry]);\r\n            map.fitBounds(bounds);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error calculating route:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const swapLocations = () => {\r\n    const temp = from;\r\n    setFrom(to);\r\n    setTo(temp);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Location Input Section */}\r\n      <div className=\"location-select\">\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"From\"\r\n            ref={fromRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setFrom, setFromSuggestions)}\r\n          />\r\n          {fromSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {fromSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => {\r\n                  setFrom(suggestion.position);\r\n                  fromRef.current.value = suggestion.displayName;\r\n                  setFromSuggestions([]);\r\n                }}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        \r\n        <button onClick={swapLocations}>â‡„</button>\r\n\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"To\"\r\n            ref={toRef}\r\n            onChange={(e) => handlePlaceChange(e.target.value, setTo, setToSuggestions)}\r\n          />\r\n          {toSuggestions.length > 0 && (\r\n            <ul className=\"suggestions-list\">\r\n              {toSuggestions.map((suggestion, index) => (\r\n                <li key={index} onClick={() => {\r\n                  setTo(suggestion.position);\r\n                  toRef.current.value = suggestion.displayName;\r\n                  setToSuggestions([]);\r\n                }}>\r\n                  {suggestion.displayName}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        \r\n        <button onClick={calculateRoute}>Get Route</button>\r\n      </div>\r\n\r\n      {/* Travel Mode Selection */}\r\n      <div className=\"travel-mode-select\">\r\n        <label htmlFor=\"travelMode\">Travel Mode: </label>\r\n        <select\r\n          id=\"travelMode\"\r\n          value={travelMode}\r\n          onChange={(e) => setTravelMode(e.target.value)}\r\n        >\r\n          <option value=\"driving-car\">Driving</option>\r\n          <option value=\"cycling-regular\">Cycling</option>\r\n          <option value=\"foot-walking\">Walking</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Map Display */}\r\n      <MapContainer center={from || { lat: 37.7749, lng: -122.4194 }} zoom={13} ref={mapRef} style={{ height: '400px', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        \r\n        {from && <Marker position={from} icon={new L.Icon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png', iconSize: [25, 41] })} />}\r\n        {to && <Marker position={to} icon={new L.Icon({ iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png', iconSize: [25, 41] })} />}\r\n        \r\n        {route && <Polyline positions={route} color=\"blue\" />}\r\n      </MapContainer>\r\n\r\n      {/* Distance and Duration Info */}\r\n      <div className=\"route-info\">\r\n        {distance && duration && (\r\n          <div>\r\n            <p>Distance: {distance}</p>\r\n            <p>Approximate Time: {duration}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}